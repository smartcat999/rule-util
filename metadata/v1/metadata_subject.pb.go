// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: metadata/v1/metadata_subject.proto

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//rpc Subscribe (SubRequest) returns (SubResponse);
type SubRequest struct {
	Header               *RequestHeader  `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	PacketId             int64           `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Subscriptions        []*Subscription `protobuf:"bytes,11,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	Source               *Entity         `protobuf:"bytes,12,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SubRequest) Reset()         { *m = SubRequest{} }
func (m *SubRequest) String() string { return proto.CompactTextString(m) }
func (*SubRequest) ProtoMessage()    {}
func (*SubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_675e8a21e3c3dc35, []int{0}
}
func (m *SubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubRequest.Unmarshal(m, b)
}
func (m *SubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubRequest.Marshal(b, m, deterministic)
}
func (m *SubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubRequest.Merge(m, src)
}
func (m *SubRequest) XXX_Size() int {
	return xxx_messageInfo_SubRequest.Size(m)
}
func (m *SubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubRequest proto.InternalMessageInfo

func (m *SubRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SubRequest) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *SubRequest) GetSubscriptions() []*Subscription {
	if m != nil {
		return m.Subscriptions
	}
	return nil
}

func (m *SubRequest) GetSource() *Entity {
	if m != nil {
		return m.Source
	}
	return nil
}

type SubResponse struct {
	Header               *ResponseHeader      `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	PacketId             int64                `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Replies              []*SubscriptionReply `protobuf:"bytes,11,rep,name=replies,proto3" json:"replies,omitempty"`
	Source               *Entity              `protobuf:"bytes,12,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SubResponse) Reset()         { *m = SubResponse{} }
func (m *SubResponse) String() string { return proto.CompactTextString(m) }
func (*SubResponse) ProtoMessage()    {}
func (*SubResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_675e8a21e3c3dc35, []int{1}
}
func (m *SubResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubResponse.Unmarshal(m, b)
}
func (m *SubResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubResponse.Marshal(b, m, deterministic)
}
func (m *SubResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubResponse.Merge(m, src)
}
func (m *SubResponse) XXX_Size() int {
	return xxx_messageInfo_SubResponse.Size(m)
}
func (m *SubResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubResponse proto.InternalMessageInfo

func (m *SubResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SubResponse) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *SubResponse) GetReplies() []*SubscriptionReply {
	if m != nil {
		return m.Replies
	}
	return nil
}

func (m *SubResponse) GetSource() *Entity {
	if m != nil {
		return m.Source
	}
	return nil
}

//rpc Unsubscribe (UnsubRequest) returns (UnsubResponse);
type UnsubRequest struct {
	Header               *RequestHeader  `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	PacketId             int64           `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Source               *Entity         `protobuf:"bytes,11,opt,name=source,proto3" json:"source,omitempty"`
	Subscriptions        []*Subscription `protobuf:"bytes,12,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UnsubRequest) Reset()         { *m = UnsubRequest{} }
func (m *UnsubRequest) String() string { return proto.CompactTextString(m) }
func (*UnsubRequest) ProtoMessage()    {}
func (*UnsubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_675e8a21e3c3dc35, []int{2}
}
func (m *UnsubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubRequest.Unmarshal(m, b)
}
func (m *UnsubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubRequest.Marshal(b, m, deterministic)
}
func (m *UnsubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubRequest.Merge(m, src)
}
func (m *UnsubRequest) XXX_Size() int {
	return xxx_messageInfo_UnsubRequest.Size(m)
}
func (m *UnsubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubRequest proto.InternalMessageInfo

func (m *UnsubRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *UnsubRequest) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *UnsubRequest) GetSource() *Entity {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *UnsubRequest) GetSubscriptions() []*Subscription {
	if m != nil {
		return m.Subscriptions
	}
	return nil
}

type UnsubResponse struct {
	Header               *ResponseHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	PacketId             int64           `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Source               *Entity         `protobuf:"bytes,11,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UnsubResponse) Reset()         { *m = UnsubResponse{} }
func (m *UnsubResponse) String() string { return proto.CompactTextString(m) }
func (*UnsubResponse) ProtoMessage()    {}
func (*UnsubResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_675e8a21e3c3dc35, []int{3}
}
func (m *UnsubResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubResponse.Unmarshal(m, b)
}
func (m *UnsubResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubResponse.Marshal(b, m, deterministic)
}
func (m *UnsubResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubResponse.Merge(m, src)
}
func (m *UnsubResponse) XXX_Size() int {
	return xxx_messageInfo_UnsubResponse.Size(m)
}
func (m *UnsubResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubResponse proto.InternalMessageInfo

func (m *UnsubResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *UnsubResponse) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *UnsubResponse) GetSource() *Entity {
	if m != nil {
		return m.Source
	}
	return nil
}

//ListSubscribersBySubscription (SubscriptionRequest) returns (SubscribersResponse);
type SubscriptionRequest struct {
	Header               *ResponseHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	PacketId             int64           `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Subscription         *Subscription   `protobuf:"bytes,11,opt,name=subscription,proto3" json:"subscription,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SubscriptionRequest) Reset()         { *m = SubscriptionRequest{} }
func (m *SubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*SubscriptionRequest) ProtoMessage()    {}
func (*SubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_675e8a21e3c3dc35, []int{4}
}
func (m *SubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionRequest.Unmarshal(m, b)
}
func (m *SubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *SubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionRequest.Merge(m, src)
}
func (m *SubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_SubscriptionRequest.Size(m)
}
func (m *SubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionRequest proto.InternalMessageInfo

func (m *SubscriptionRequest) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SubscriptionRequest) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *SubscriptionRequest) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

type SubscribersResponse struct {
	Header               *ResponseHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	PacketId             int64           `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Subscribers          []*Entity       `protobuf:"bytes,11,rep,name=subscribers,proto3" json:"subscribers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SubscribersResponse) Reset()         { *m = SubscribersResponse{} }
func (m *SubscribersResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribersResponse) ProtoMessage()    {}
func (*SubscribersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_675e8a21e3c3dc35, []int{5}
}
func (m *SubscribersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribersResponse.Unmarshal(m, b)
}
func (m *SubscribersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribersResponse.Marshal(b, m, deterministic)
}
func (m *SubscribersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribersResponse.Merge(m, src)
}
func (m *SubscribersResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribersResponse.Size(m)
}
func (m *SubscribersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribersResponse proto.InternalMessageInfo

func (m *SubscribersResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SubscribersResponse) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *SubscribersResponse) GetSubscribers() []*Entity {
	if m != nil {
		return m.Subscribers
	}
	return nil
}

func init() {
	proto.RegisterType((*SubRequest)(nil), "mdmp.metadata.SubRequest")
	proto.RegisterType((*SubResponse)(nil), "mdmp.metadata.SubResponse")
	proto.RegisterType((*UnsubRequest)(nil), "mdmp.metadata.UnsubRequest")
	proto.RegisterType((*UnsubResponse)(nil), "mdmp.metadata.UnsubResponse")
	proto.RegisterType((*SubscriptionRequest)(nil), "mdmp.metadata.SubscriptionRequest")
	proto.RegisterType((*SubscribersResponse)(nil), "mdmp.metadata.SubscribersResponse")
}

func init() {
	proto.RegisterFile("metadata/v1/metadata_subject.proto", fileDescriptor_675e8a21e3c3dc35)
}

var fileDescriptor_675e8a21e3c3dc35 = []byte{
	// 487 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x4d, 0x6f, 0xd4, 0x30,
	0x10, 0x55, 0xb6, 0xd5, 0x42, 0x27, 0xbb, 0x07, 0x8c, 0x90, 0x96, 0xb4, 0x48, 0x51, 0x4e, 0x7b,
	0x69, 0xa2, 0x2e, 0xa0, 0x4a, 0x5c, 0x2a, 0x2a, 0x21, 0x15, 0x89, 0xc3, 0x2a, 0x2b, 0x2e, 0x70,
	0xa8, 0xec, 0xc4, 0xa4, 0x86, 0x4d, 0x6c, 0x62, 0xbb, 0x52, 0xff, 0x06, 0x3f, 0x81, 0x23, 0x67,
	0x7e, 0x06, 0x17, 0xc4, 0x1f, 0x42, 0x75, 0x1c, 0x36, 0xc9, 0x7e, 0x88, 0x3d, 0xe4, 0xe6, 0x64,
	0xde, 0xbc, 0x79, 0xef, 0x4d, 0x62, 0x08, 0x72, 0xaa, 0x70, 0x8a, 0x15, 0x8e, 0x6e, 0xcf, 0xa2,
	0xfa, 0x7c, 0x2d, 0x35, 0xf9, 0x4c, 0x13, 0x15, 0x8a, 0x92, 0x2b, 0x8e, 0xc6, 0x79, 0x9a, 0x8b,
	0xb0, 0x2e, 0x7a, 0xa7, 0x19, 0x53, 0x37, 0x9a, 0x84, 0x09, 0xcf, 0xa3, 0x8c, 0x67, 0x3c, 0x32,
	0x28, 0xa2, 0x3f, 0x99, 0x27, 0xf3, 0x60, 0x4e, 0x55, 0xb7, 0xe7, 0x6f, 0x9c, 0x90, 0xf3, 0x94,
	0x2e, 0x2d, 0xe2, 0xbc, 0x4b, 0x98, 0x71, 0x9e, 0x2d, 0x29, 0x16, 0x4c, 0xda, 0x63, 0x84, 0x05,
	0x8b, 0x70, 0x51, 0x70, 0x85, 0x15, 0xe3, 0x85, 0xac, 0x1a, 0x83, 0xdf, 0x0e, 0xc0, 0x42, 0x93,
	0x98, 0x7e, 0xd5, 0x54, 0x2a, 0xf4, 0x02, 0x86, 0x37, 0x14, 0xa7, 0xb4, 0x9c, 0x0c, 0x7c, 0x67,
	0xea, 0xce, 0x4e, 0xc2, 0x96, 0xf0, 0xd0, 0xe2, 0xae, 0x0c, 0x26, 0xb6, 0x58, 0x74, 0x0c, 0x47,
	0x02, 0x27, 0x5f, 0xa8, 0xba, 0x66, 0xe9, 0x04, 0x7c, 0x67, 0x7a, 0x10, 0x3f, 0xac, 0x5e, 0xbc,
	0x4d, 0xd1, 0x6b, 0x18, 0x4b, 0x4d, 0x64, 0x52, 0x32, 0x61, 0x06, 0x4f, 0x5c, 0xff, 0x60, 0xea,
	0xce, 0x8e, 0x3b, 0xcc, 0x8b, 0x06, 0x26, 0x6e, 0x77, 0xa0, 0x53, 0x18, 0x4a, 0xae, 0xcb, 0x84,
	0x4e, 0x46, 0x46, 0xd5, 0x93, 0x4e, 0xef, 0x9b, 0x42, 0x31, 0x75, 0x17, 0x5b, 0x50, 0xf0, 0xcb,
	0x01, 0xd7, 0x78, 0x92, 0x82, 0x17, 0x92, 0xa2, 0x97, 0x1d, 0x53, 0xcf, 0xd6, 0x4c, 0x55, 0xc0,
	0x7d, 0x5c, 0xbd, 0x82, 0x07, 0x25, 0x15, 0x4b, 0x46, 0x6b, 0x3f, 0xfe, 0x2e, 0x3f, 0x54, 0x2c,
	0xef, 0xe2, 0xba, 0x61, 0x5f, 0x3b, 0x7f, 0x1c, 0x18, 0xbd, 0x2f, 0x64, 0xaf, 0x4b, 0x5a, 0x49,
	0x72, 0xff, 0x43, 0xd2, 0xfa, 0x4e, 0x47, 0xfb, 0xee, 0x34, 0xf8, 0xe6, 0xc0, 0xd8, 0xba, 0xea,
	0x71, 0x4d, 0xfb, 0xf9, 0x0a, 0x7e, 0x38, 0xf0, 0xb8, 0xbd, 0xb8, 0x2a, 0xf1, 0x3e, 0xa4, 0x5d,
	0xc0, 0xa8, 0x99, 0x88, 0x15, 0xb8, 0x33, 0xc2, 0x56, 0x43, 0xf0, 0x7d, 0x25, 0x96, 0xd0, 0x52,
	0xf6, 0x9a, 0xe3, 0x39, 0xb8, 0x72, 0x35, 0xca, 0x7e, 0xf2, 0x5b, 0xc2, 0x6c, 0x22, 0x67, 0x3f,
	0x07, 0x30, 0x9c, 0x6b, 0xb2, 0xd0, 0x04, 0x5d, 0xc0, 0xe1, 0x9c, 0x15, 0x19, 0xf2, 0x3a, 0x6d,
	0xf7, 0x2f, 0x6d, 0xd0, 0x5e, 0xd7, 0xfe, 0x9c, 0xdf, 0xd7, 0xac, 0xb1, 0x4b, 0x38, 0xfa, 0xe7,
	0x17, 0x3d, 0x5d, 0x0f, 0xaa, 0x26, 0xf1, 0x36, 0x95, 0x2c, 0xc7, 0x15, 0xb8, 0xe6, 0xab, 0xb3,
	0x2c, 0xdd, 0x79, 0xcd, 0xff, 0xcc, 0x3b, 0xd9, 0x5c, 0xb4, 0x4c, 0x1f, 0xe1, 0xd1, 0x3b, 0x26,
	0xd5, 0xa2, 0x75, 0x53, 0x05, 0x3b, 0x6f, 0x81, 0x8a, 0x76, 0x0b, 0xa6, 0xb9, 0xc3, 0xcb, 0xc3,
	0x0f, 0x83, 0xdb, 0x33, 0x32, 0x34, 0x77, 0xf4, 0xf3, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x93,
	0x21, 0x5e, 0xab, 0x62, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PubSubClient is the client API for PubSub service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PubSubClient interface {
	//Status
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PongResponse, error)
	// Pub/sub
	Subscribe(ctx context.Context, in *SubRequest, opts ...grpc.CallOption) (*SubResponse, error)
	Unsubscribe(ctx context.Context, in *UnsubRequest, opts ...grpc.CallOption) (*UnsubResponse, error)
	ListSubscriptions(ctx context.Context, in *SubscriptionRequest, opts ...grpc.CallOption) (*SubscribersResponse, error)
}

type pubSubClient struct {
	cc *grpc.ClientConn
}

func NewPubSubClient(cc *grpc.ClientConn) PubSubClient {
	return &pubSubClient{cc}
}

func (c *pubSubClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PongResponse, error) {
	out := new(PongResponse)
	err := c.cc.Invoke(ctx, "/mdmp.metadata.PubSub/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pubSubClient) Subscribe(ctx context.Context, in *SubRequest, opts ...grpc.CallOption) (*SubResponse, error) {
	out := new(SubResponse)
	err := c.cc.Invoke(ctx, "/mdmp.metadata.PubSub/Subscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pubSubClient) Unsubscribe(ctx context.Context, in *UnsubRequest, opts ...grpc.CallOption) (*UnsubResponse, error) {
	out := new(UnsubResponse)
	err := c.cc.Invoke(ctx, "/mdmp.metadata.PubSub/Unsubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pubSubClient) ListSubscriptions(ctx context.Context, in *SubscriptionRequest, opts ...grpc.CallOption) (*SubscribersResponse, error) {
	out := new(SubscribersResponse)
	err := c.cc.Invoke(ctx, "/mdmp.metadata.PubSub/ListSubscriptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PubSubServer is the server API for PubSub service.
type PubSubServer interface {
	//Status
	Ping(context.Context, *PingRequest) (*PongResponse, error)
	// Pub/sub
	Subscribe(context.Context, *SubRequest) (*SubResponse, error)
	Unsubscribe(context.Context, *UnsubRequest) (*UnsubResponse, error)
	ListSubscriptions(context.Context, *SubscriptionRequest) (*SubscribersResponse, error)
}

// UnimplementedPubSubServer can be embedded to have forward compatible implementations.
type UnimplementedPubSubServer struct {
}

func (*UnimplementedPubSubServer) Ping(ctx context.Context, req *PingRequest) (*PongResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedPubSubServer) Subscribe(ctx context.Context, req *SubRequest) (*SubResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}
func (*UnimplementedPubSubServer) Unsubscribe(ctx context.Context, req *UnsubRequest) (*UnsubResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unsubscribe not implemented")
}
func (*UnimplementedPubSubServer) ListSubscriptions(ctx context.Context, req *SubscriptionRequest) (*SubscribersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSubscriptions not implemented")
}

func RegisterPubSubServer(s *grpc.Server, srv PubSubServer) {
	s.RegisterService(&_PubSub_serviceDesc, srv)
}

func _PubSub_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PubSubServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mdmp.metadata.PubSub/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PubSubServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PubSub_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PubSubServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mdmp.metadata.PubSub/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PubSubServer).Subscribe(ctx, req.(*SubRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PubSub_Unsubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PubSubServer).Unsubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mdmp.metadata.PubSub/Unsubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PubSubServer).Unsubscribe(ctx, req.(*UnsubRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PubSub_ListSubscriptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PubSubServer).ListSubscriptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mdmp.metadata.PubSub/ListSubscriptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PubSubServer).ListSubscriptions(ctx, req.(*SubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PubSub_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mdmp.metadata.PubSub",
	HandlerType: (*PubSubServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _PubSub_Ping_Handler,
		},
		{
			MethodName: "Subscribe",
			Handler:    _PubSub_Subscribe_Handler,
		},
		{
			MethodName: "Unsubscribe",
			Handler:    _PubSub_Unsubscribe_Handler,
		},
		{
			MethodName: "ListSubscriptions",
			Handler:    _PubSub_ListSubscriptions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "metadata/v1/metadata_subject.proto",
}
