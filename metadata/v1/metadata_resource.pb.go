// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: metadata/v1/metadata_resource.proto

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ResourceObject_EventType int32

const (
	ResourceObject_ADDED    ResourceObject_EventType = 0
	ResourceObject_MODIFIED ResourceObject_EventType = 1
	ResourceObject_DELETED  ResourceObject_EventType = 2
	ResourceObject_ERROR    ResourceObject_EventType = 3
)

var ResourceObject_EventType_name = map[int32]string{
	0: "ADDED",
	1: "MODIFIED",
	2: "DELETED",
	3: "ERROR",
}

var ResourceObject_EventType_value = map[string]int32{
	"ADDED":    0,
	"MODIFIED": 1,
	"DELETED":  2,
	"ERROR":    3,
}

func (x ResourceObject_EventType) String() string {
	return proto.EnumName(ResourceObject_EventType_name, int32(x))
}

func (ResourceObject_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d28671693ee869ea, []int{2, 0}
}

type ResourceRangeRequest_SortOrder int32

const (
	ResourceRangeRequest_NONE    ResourceRangeRequest_SortOrder = 0
	ResourceRangeRequest_ASCEND  ResourceRangeRequest_SortOrder = 1
	ResourceRangeRequest_DESCEND ResourceRangeRequest_SortOrder = 2
)

var ResourceRangeRequest_SortOrder_name = map[int32]string{
	0: "NONE",
	1: "ASCEND",
	2: "DESCEND",
}

var ResourceRangeRequest_SortOrder_value = map[string]int32{
	"NONE":    0,
	"ASCEND":  1,
	"DESCEND": 2,
}

func (x ResourceRangeRequest_SortOrder) String() string {
	return proto.EnumName(ResourceRangeRequest_SortOrder_name, int32(x))
}

func (ResourceRangeRequest_SortOrder) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d28671693ee869ea, []int{5, 0}
}

type ResourceRangeRequest_SortTarget int32

const (
	ResourceRangeRequest_KEY ResourceRangeRequest_SortTarget = 0
)

var ResourceRangeRequest_SortTarget_name = map[int32]string{
	0: "KEY",
}

var ResourceRangeRequest_SortTarget_value = map[string]int32{
	"KEY": 0,
}

func (x ResourceRangeRequest_SortTarget) String() string {
	return proto.EnumName(ResourceRangeRequest_SortTarget_name, int32(x))
}

func (ResourceRangeRequest_SortTarget) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d28671693ee869ea, []int{5, 1}
}

type ResourceRangeRequest_Target int32

const (
	ResourceRangeRequest_Service ResourceRangeRequest_Target = 0
	ResourceRangeRequest_Entity  ResourceRangeRequest_Target = 1
	ResourceRangeRequest_Stream  ResourceRangeRequest_Target = 2
	ResourceRangeRequest_PubSub  ResourceRangeRequest_Target = 3
	ResourceRangeRequest_Router  ResourceRangeRequest_Target = 4
	ResourceRangeRequest_Rule    ResourceRangeRequest_Target = 5
)

var ResourceRangeRequest_Target_name = map[int32]string{
	0: "Service",
	1: "Entity",
	2: "Stream",
	3: "PubSub",
	4: "Router",
	5: "Rule",
}

var ResourceRangeRequest_Target_value = map[string]int32{
	"Service": 0,
	"Entity":  1,
	"Stream":  2,
	"PubSub":  3,
	"Router":  4,
	"Rule":    5,
}

func (x ResourceRangeRequest_Target) String() string {
	return proto.EnumName(ResourceRangeRequest_Target_name, int32(x))
}

func (ResourceRangeRequest_Target) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d28671693ee869ea, []int{5, 2}
}

type ResourcesRequest struct {
	Header               *RequestHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	ResourceVersion      int64          `protobuf:"varint,10,opt,name=resource_version,json=resourceVersion,proto3" json:"resource_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ResourcesRequest) Reset()         { *m = ResourcesRequest{} }
func (m *ResourcesRequest) String() string { return proto.CompactTextString(m) }
func (*ResourcesRequest) ProtoMessage()    {}
func (*ResourcesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d28671693ee869ea, []int{0}
}
func (m *ResourcesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcesRequest.Unmarshal(m, b)
}
func (m *ResourcesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcesRequest.Marshal(b, m, deterministic)
}
func (m *ResourcesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcesRequest.Merge(m, src)
}
func (m *ResourcesRequest) XXX_Size() int {
	return xxx_messageInfo_ResourcesRequest.Size(m)
}
func (m *ResourcesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcesRequest proto.InternalMessageInfo

type ResourcesResponse struct {
	Header               *ResponseHeader   `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Body                 []*ResourceObject `protobuf:"bytes,3,rep,name=Body,proto3" json:"Body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ResourcesResponse) Reset()         { *m = ResourcesResponse{} }
func (m *ResourcesResponse) String() string { return proto.CompactTextString(m) }
func (*ResourcesResponse) ProtoMessage()    {}
func (*ResourcesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d28671693ee869ea, []int{1}
}
func (m *ResourcesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcesResponse.Unmarshal(m, b)
}
func (m *ResourcesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcesResponse.Marshal(b, m, deterministic)
}
func (m *ResourcesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcesResponse.Merge(m, src)
}
func (m *ResourcesResponse) XXX_Size() int {
	return xxx_messageInfo_ResourcesResponse.Size(m)
}
func (m *ResourcesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcesResponse proto.InternalMessageInfo

type ResourceObject struct {
	Type            ResourceObject_EventType `protobuf:"varint,10,opt,name=type,proto3,enum=mdmp.metadata.ResourceObject_EventType" json:"type,omitempty"`
	ResourceVersion int64                    `protobuf:"varint,11,opt,name=resource_version,json=resourceVersion,proto3" json:"resource_version,omitempty"`
	// Types that are valid to be assigned to Body:
	//	*ResourceObject_InitConfig
	//	*ResourceObject_Stream
	//	*ResourceObject_Subscription
	//	*ResourceObject_Rule
	//	*ResourceObject_Route
	//	*ResourceObject_Service
	Body                 isResourceObject_Body `protobuf_oneof:"body"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ResourceObject) Reset()         { *m = ResourceObject{} }
func (m *ResourceObject) String() string { return proto.CompactTextString(m) }
func (*ResourceObject) ProtoMessage()    {}
func (*ResourceObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_d28671693ee869ea, []int{2}
}
func (m *ResourceObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceObject.Unmarshal(m, b)
}
func (m *ResourceObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceObject.Marshal(b, m, deterministic)
}
func (m *ResourceObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceObject.Merge(m, src)
}
func (m *ResourceObject) XXX_Size() int {
	return xxx_messageInfo_ResourceObject.Size(m)
}
func (m *ResourceObject) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceObject.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceObject proto.InternalMessageInfo

type isResourceObject_Body interface {
	isResourceObject_Body()
}

type ResourceObject_InitConfig struct {
	InitConfig *Init `protobuf:"bytes,12,opt,name=init_config,json=initConfig,proto3,oneof" json:"init_config,omitempty"`
}
type ResourceObject_Stream struct {
	Stream *Stream `protobuf:"bytes,13,opt,name=stream,proto3,oneof" json:"stream,omitempty"`
}
type ResourceObject_Subscription struct {
	Subscription *Subscription `protobuf:"bytes,14,opt,name=subscription,proto3,oneof" json:"subscription,omitempty"`
}
type ResourceObject_Rule struct {
	Rule *RuleQL `protobuf:"bytes,15,opt,name=rule,proto3,oneof" json:"rule,omitempty"`
}
type ResourceObject_Route struct {
	Route *Route `protobuf:"bytes,16,opt,name=route,proto3,oneof" json:"route,omitempty"`
}
type ResourceObject_Service struct {
	Service *Service `protobuf:"bytes,17,opt,name=service,proto3,oneof" json:"service,omitempty"`
}

func (*ResourceObject_InitConfig) isResourceObject_Body()   {}
func (*ResourceObject_Stream) isResourceObject_Body()       {}
func (*ResourceObject_Subscription) isResourceObject_Body() {}
func (*ResourceObject_Rule) isResourceObject_Body()         {}
func (*ResourceObject_Route) isResourceObject_Body()        {}
func (*ResourceObject_Service) isResourceObject_Body()      {}

func (m *ResourceObject) GetBody() isResourceObject_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *ResourceObject) GetInitConfig() *Init {
	if x, ok := m.GetBody().(*ResourceObject_InitConfig); ok {
		return x.InitConfig
	}
	return nil
}

func (m *ResourceObject) GetStream() *Stream {
	if x, ok := m.GetBody().(*ResourceObject_Stream); ok {
		return x.Stream
	}
	return nil
}

func (m *ResourceObject) GetSubscription() *Subscription {
	if x, ok := m.GetBody().(*ResourceObject_Subscription); ok {
		return x.Subscription
	}
	return nil
}

func (m *ResourceObject) GetRule() *RuleQL {
	if x, ok := m.GetBody().(*ResourceObject_Rule); ok {
		return x.Rule
	}
	return nil
}

func (m *ResourceObject) GetRoute() *Route {
	if x, ok := m.GetBody().(*ResourceObject_Route); ok {
		return x.Route
	}
	return nil
}

func (m *ResourceObject) GetService() *Service {
	if x, ok := m.GetBody().(*ResourceObject_Service); ok {
		return x.Service
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ResourceObject) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ResourceObject_InitConfig)(nil),
		(*ResourceObject_Stream)(nil),
		(*ResourceObject_Subscription)(nil),
		(*ResourceObject_Rule)(nil),
		(*ResourceObject_Route)(nil),
		(*ResourceObject_Service)(nil),
	}
}

type Init struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Init) Reset()         { *m = Init{} }
func (m *Init) String() string { return proto.CompactTextString(m) }
func (*Init) ProtoMessage()    {}
func (*Init) Descriptor() ([]byte, []int) {
	return fileDescriptor_d28671693ee869ea, []int{3}
}
func (m *Init) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Init.Unmarshal(m, b)
}
func (m *Init) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Init.Marshal(b, m, deterministic)
}
func (m *Init) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Init.Merge(m, src)
}
func (m *Init) XXX_Size() int {
	return xxx_messageInfo_Init.Size(m)
}
func (m *Init) XXX_DiscardUnknown() {
	xxx_messageInfo_Init.DiscardUnknown(m)
}

var xxx_messageInfo_Init proto.InternalMessageInfo

type Stream struct {
	Source               []*Flow  `protobuf:"bytes,10,rep,name=source,proto3" json:"source,omitempty"`
	Sink                 *Flow    `protobuf:"bytes,11,opt,name=sink,proto3" json:"sink,omitempty"`
	PubSubTopic          *Flow    `protobuf:"bytes,12,opt,name=pub_sub_topic,json=pubSubTopic,proto3" json:"pub_sub_topic,omitempty"`
	PubSubQueue          *Flow    `protobuf:"bytes,13,opt,name=pub_sub_queue,json=pubSubQueue,proto3" json:"pub_sub_queue,omitempty"`
	RuleTopic            *Flow    `protobuf:"bytes,14,opt,name=rule_topic,json=ruleTopic,proto3" json:"rule_topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stream) Reset()         { *m = Stream{} }
func (m *Stream) String() string { return proto.CompactTextString(m) }
func (*Stream) ProtoMessage()    {}
func (*Stream) Descriptor() ([]byte, []int) {
	return fileDescriptor_d28671693ee869ea, []int{4}
}
func (m *Stream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stream.Unmarshal(m, b)
}
func (m *Stream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stream.Marshal(b, m, deterministic)
}
func (m *Stream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stream.Merge(m, src)
}
func (m *Stream) XXX_Size() int {
	return xxx_messageInfo_Stream.Size(m)
}
func (m *Stream) XXX_DiscardUnknown() {
	xxx_messageInfo_Stream.DiscardUnknown(m)
}

var xxx_messageInfo_Stream proto.InternalMessageInfo

type ResourceRangeRequest struct {
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// key is the first key for the range. If range_end is not given, the request only looks up key.
	Key []byte `protobuf:"bytes,19,opt,name=key,proto3" json:"key,omitempty"`
	// range_end is the upper bound on the requested range [key, range_end).
	// If range_end is '\0', the range is all keys >= key.
	// If range_end is key plus one (e.g., "aa"+1 == "ab", "a\xff"+1 == "b"),
	// then the range request gets all keys prefixed with key.
	// If both key and range_end are '\0', then the range request returns all keys.
	RangeEnd []byte `protobuf:"bytes,2,opt,name=range_end,json=rangeEnd,proto3" json:"range_end,omitempty"`
	// limit is a limit on the number of keys returned for the request. When limit is set to 0,
	// it is treated as no limit.
	Limit int64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// revision is the point-in-time of the key-value store to use for the range.
	// If revision is less or equal to zero, the range is over the newest key-value store.
	// If the revision has been compacted, ErrCompacted is returned as a response.
	Revision int64 `protobuf:"varint,4,opt,name=revision,proto3" json:"revision,omitempty"`
	// sort_order is the order for returned sorted results.
	SortOrder ResourceRangeRequest_SortOrder `protobuf:"varint,5,opt,name=sort_order,json=sortOrder,proto3,enum=mdmp.metadata.ResourceRangeRequest_SortOrder" json:"sort_order,omitempty"`
	// sort_target is the key-value field to use for sorting.
	SortTarget ResourceRangeRequest_SortTarget `protobuf:"varint,6,opt,name=sort_target,json=sortTarget,proto3,enum=mdmp.metadata.ResourceRangeRequest_SortTarget" json:"sort_target,omitempty"`
	// keys_only when set returns only the keys and not the values.
	KeysOnly bool `protobuf:"varint,8,opt,name=keys_only,json=keysOnly,proto3" json:"keys_only,omitempty"`
	// count_only when set returns only the count of the keys in the range.
	CountOnly bool `protobuf:"varint,9,opt,name=count_only,json=countOnly,proto3" json:"count_only,omitempty"`
	// sort_target is the key-value field to use for sorting.
	Target ResourceRangeRequest_Target `protobuf:"varint,20,opt,name=target,proto3,enum=mdmp.metadata.ResourceRangeRequest_Target" json:"target,omitempty"`
	// min_mod_revision is the lower bound for returned key mod revisions; all keys with
	// lesser mod revisions will be filtered away.
	MinResourceVersion int64 `protobuf:"varint,21,opt,name=min_resource_version,json=minResourceVersion,proto3" json:"min_resource_version,omitempty"`
	// max_mod_revision is the upper bound for returned key mod revisions; all keys with
	// greater mod revisions will be filtered away.
	MaxResourceVersion   int64    `protobuf:"varint,22,opt,name=max_resource_version,json=maxResourceVersion,proto3" json:"max_resource_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceRangeRequest) Reset()         { *m = ResourceRangeRequest{} }
func (m *ResourceRangeRequest) String() string { return proto.CompactTextString(m) }
func (*ResourceRangeRequest) ProtoMessage()    {}
func (*ResourceRangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d28671693ee869ea, []int{5}
}
func (m *ResourceRangeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceRangeRequest.Unmarshal(m, b)
}
func (m *ResourceRangeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceRangeRequest.Marshal(b, m, deterministic)
}
func (m *ResourceRangeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceRangeRequest.Merge(m, src)
}
func (m *ResourceRangeRequest) XXX_Size() int {
	return xxx_messageInfo_ResourceRangeRequest.Size(m)
}
func (m *ResourceRangeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceRangeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceRangeRequest proto.InternalMessageInfo

type ResourceRangeResponse struct {
	Header *ResponseHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	// Body is the list of key-value pairs matched by the range request.
	// Body is empty when count is requested.
	Body []*ResourceKV `protobuf:"bytes,10,rep,name=Body,proto3" json:"Body,omitempty"`
	// more indicates if there are more keys to return in the requested range.
	More bool `protobuf:"varint,11,opt,name=more,proto3" json:"more,omitempty"`
	// count is set to the number of keys within the range when requested.
	Count                int64    `protobuf:"varint,12,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceRangeResponse) Reset()         { *m = ResourceRangeResponse{} }
func (m *ResourceRangeResponse) String() string { return proto.CompactTextString(m) }
func (*ResourceRangeResponse) ProtoMessage()    {}
func (*ResourceRangeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d28671693ee869ea, []int{6}
}
func (m *ResourceRangeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceRangeResponse.Unmarshal(m, b)
}
func (m *ResourceRangeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceRangeResponse.Marshal(b, m, deterministic)
}
func (m *ResourceRangeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceRangeResponse.Merge(m, src)
}
func (m *ResourceRangeResponse) XXX_Size() int {
	return xxx_messageInfo_ResourceRangeResponse.Size(m)
}
func (m *ResourceRangeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceRangeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceRangeResponse proto.InternalMessageInfo

type ResourceKV struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceKV) Reset()         { *m = ResourceKV{} }
func (m *ResourceKV) String() string { return proto.CompactTextString(m) }
func (*ResourceKV) ProtoMessage()    {}
func (*ResourceKV) Descriptor() ([]byte, []int) {
	return fileDescriptor_d28671693ee869ea, []int{7}
}
func (m *ResourceKV) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceKV.Unmarshal(m, b)
}
func (m *ResourceKV) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceKV.Marshal(b, m, deterministic)
}
func (m *ResourceKV) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceKV.Merge(m, src)
}
func (m *ResourceKV) XXX_Size() int {
	return xxx_messageInfo_ResourceKV.Size(m)
}
func (m *ResourceKV) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceKV.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceKV proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("mdmp.metadata.ResourceObject_EventType", ResourceObject_EventType_name, ResourceObject_EventType_value)
	proto.RegisterEnum("mdmp.metadata.ResourceRangeRequest_SortOrder", ResourceRangeRequest_SortOrder_name, ResourceRangeRequest_SortOrder_value)
	proto.RegisterEnum("mdmp.metadata.ResourceRangeRequest_SortTarget", ResourceRangeRequest_SortTarget_name, ResourceRangeRequest_SortTarget_value)
	proto.RegisterEnum("mdmp.metadata.ResourceRangeRequest_Target", ResourceRangeRequest_Target_name, ResourceRangeRequest_Target_value)
	proto.RegisterType((*ResourcesRequest)(nil), "mdmp.metadata.ResourcesRequest")
	proto.RegisterType((*ResourcesResponse)(nil), "mdmp.metadata.ResourcesResponse")
	proto.RegisterType((*ResourceObject)(nil), "mdmp.metadata.ResourceObject")
	proto.RegisterType((*Init)(nil), "mdmp.metadata.Init")
	proto.RegisterType((*Stream)(nil), "mdmp.metadata.Stream")
	proto.RegisterType((*ResourceRangeRequest)(nil), "mdmp.metadata.ResourceRangeRequest")
	proto.RegisterType((*ResourceRangeResponse)(nil), "mdmp.metadata.ResourceRangeResponse")
	proto.RegisterType((*ResourceKV)(nil), "mdmp.metadata.ResourceKV")
}

func init() {
	proto.RegisterFile("metadata/v1/metadata_resource.proto", fileDescriptor_d28671693ee869ea)
}

var fileDescriptor_d28671693ee869ea = []byte{
	// 1037 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x41, 0x73, 0xdb, 0x44,
	0x14, 0x96, 0x6c, 0x59, 0xb1, 0x9f, 0x9d, 0x54, 0xdd, 0x24, 0x1d, 0x91, 0xd2, 0xe0, 0x51, 0x99,
	0x69, 0xa0, 0xc4, 0x6e, 0x02, 0xb4, 0x07, 0xb8, 0x24, 0xb5, 0x3a, 0xce, 0x24, 0x8d, 0xe9, 0x26,
	0x53, 0x06, 0x2e, 0x1e, 0xc9, 0xde, 0x3a, 0x22, 0xd6, 0xae, 0x2a, 0xad, 0x4c, 0x7d, 0xe0, 0xc6,
	0x7f, 0x81, 0x9f, 0xd2, 0x5f, 0xc0, 0xbd, 0xfc, 0x02, 0x8e, 0x70, 0x63, 0xf6, 0x49, 0x4e, 0x13,
	0x25, 0xce, 0x84, 0xa1, 0xb7, 0xb7, 0xfb, 0xbe, 0xef, 0xbd, 0x6f, 0xf7, 0xe9, 0xbd, 0x15, 0xdc,
	0x0f, 0x99, 0xf4, 0x86, 0x9e, 0xf4, 0xda, 0x93, 0xad, 0xf6, 0xcc, 0xee, 0xc7, 0x2c, 0x11, 0x69,
	0x3c, 0x60, 0xad, 0x28, 0x16, 0x52, 0x90, 0xc5, 0x70, 0x18, 0x46, 0xad, 0x99, 0x77, 0x6d, 0x73,
	0x14, 0xc8, 0x93, 0xd4, 0x6f, 0x0d, 0x44, 0xd8, 0x1e, 0x89, 0x91, 0x68, 0x23, 0xca, 0x4f, 0x5f,
	0xe1, 0x0a, 0x17, 0x68, 0x65, 0xec, 0xb5, 0xe6, 0x95, 0x29, 0x42, 0x31, 0x64, 0xe3, 0x1c, 0xf1,
	0xa4, 0x18, 0x70, 0x24, 0xc4, 0x68, 0xcc, 0xbc, 0x28, 0x48, 0x72, 0xb3, 0xed, 0x45, 0x41, 0xdb,
	0xe3, 0x5c, 0x48, 0x4f, 0x06, 0x82, 0x27, 0x19, 0xd1, 0x49, 0xc0, 0xa2, 0xb9, 0xd4, 0x84, 0xb2,
	0xd7, 0x29, 0x4b, 0x24, 0xf9, 0x0a, 0xcc, 0x13, 0xe6, 0x0d, 0x59, 0x6c, 0x97, 0x9a, 0xfa, 0x46,
	0x7d, 0xfb, 0xe3, 0xd6, 0x05, 0xf5, 0xad, 0x1c, 0xd7, 0x45, 0x0c, 0xcd, 0xb1, 0xe4, 0x33, 0xb0,
	0x66, 0x87, 0xee, 0x4f, 0x58, 0x9c, 0x04, 0x82, 0xdb, 0xd0, 0xd4, 0x37, 0xca, 0xf4, 0xd6, 0x6c,
	0xff, 0x65, 0xb6, 0xed, 0xfc, 0x02, 0xb7, 0xcf, 0x25, 0x4d, 0x22, 0xc1, 0x13, 0x46, 0xbe, 0x2e,
	0x64, 0xbd, 0x77, 0x29, 0x6b, 0x06, 0x2c, 0xa4, 0xdd, 0x02, 0x63, 0x57, 0x0c, 0xa7, 0x76, 0xb9,
	0x59, 0xbe, 0x9a, 0x84, 0x69, 0x7a, 0xfe, 0x4f, 0x6c, 0x20, 0x29, 0x42, 0x9d, 0x7f, 0xca, 0xb0,
	0x74, 0xd1, 0x41, 0xbe, 0x01, 0x43, 0x4e, 0x23, 0x86, 0x82, 0x97, 0xb6, 0x1f, 0x5c, 0x1b, 0xa5,
	0xe5, 0x4e, 0x18, 0x97, 0xc7, 0xd3, 0x88, 0x51, 0x24, 0x5d, 0x79, 0xf2, 0xfa, 0x95, 0x27, 0x27,
	0x8f, 0xa1, 0x1e, 0xf0, 0x40, 0xf6, 0x07, 0x82, 0xbf, 0x0a, 0x46, 0x76, 0x03, 0x4f, 0xba, 0x5c,
	0x48, 0xb7, 0xc7, 0x03, 0xd9, 0xd5, 0x28, 0x28, 0xe4, 0x53, 0x04, 0x92, 0x36, 0x98, 0x89, 0x8c,
	0x99, 0x17, 0xda, 0x8b, 0x48, 0x59, 0x2d, 0x50, 0x8e, 0xd0, 0xd9, 0xd5, 0x68, 0x0e, 0x23, 0x3b,
	0xd0, 0x48, 0x52, 0x3f, 0x19, 0xc4, 0x41, 0xa4, 0xca, 0x6d, 0x2f, 0x21, 0xed, 0x6e, 0x91, 0x76,
	0x0e, 0xd2, 0xd5, 0xe8, 0x05, 0x0a, 0x79, 0x08, 0x46, 0x9c, 0x8e, 0x99, 0x7d, 0xeb, 0xca, 0x8c,
	0x34, 0x1d, 0xb3, 0x17, 0x07, 0x5d, 0x8d, 0x22, 0x88, 0x7c, 0x01, 0x95, 0x58, 0xa4, 0x92, 0xd9,
	0x16, 0xa2, 0x57, 0x8a, 0x68, 0xe5, 0xeb, 0x6a, 0x34, 0x03, 0x91, 0x6d, 0x58, 0x48, 0x58, 0x3c,
	0x09, 0x06, 0xcc, 0xbe, 0x8d, 0xf8, 0x3b, 0x45, 0x61, 0x99, 0xb7, 0xab, 0xd1, 0x19, 0xd0, 0xf9,
	0x16, 0x6a, 0x67, 0x17, 0x4f, 0x6a, 0x50, 0xd9, 0xe9, 0x74, 0xdc, 0x8e, 0xa5, 0x91, 0x06, 0x54,
	0x9f, 0xf7, 0x3a, 0x7b, 0xcf, 0xf6, 0xdc, 0x8e, 0xa5, 0x93, 0x3a, 0x2c, 0x74, 0xdc, 0x03, 0xf7,
	0xd8, 0xed, 0x58, 0x25, 0x85, 0x72, 0x29, 0xed, 0x51, 0xab, 0xbc, 0x6b, 0x82, 0xe1, 0xab, 0xda,
	0x9b, 0x60, 0xa8, 0xeb, 0x75, 0x7e, 0x2d, 0x81, 0x99, 0x5d, 0x1a, 0x79, 0x08, 0x66, 0x56, 0x24,
	0x1b, 0xf0, 0x1b, 0x2a, 0x96, 0xe3, 0xd9, 0x58, 0xfc, 0x4c, 0x73, 0x08, 0x79, 0x00, 0x46, 0x12,
	0xf0, 0x53, 0xac, 0xef, 0x1c, 0x28, 0x02, 0xc8, 0x13, 0x58, 0x8c, 0x52, 0xbf, 0x9f, 0xa4, 0x7e,
	0x5f, 0x8a, 0x28, 0x18, 0xcc, 0xa9, 0x35, 0x32, 0xea, 0x51, 0xea, 0x1f, 0xa5, 0xfe, 0xb1, 0xc2,
	0x9d, 0x27, 0xbe, 0x4e, 0x59, 0xca, 0xf2, 0x8a, 0x5f, 0x47, 0x7c, 0xa1, 0x70, 0x64, 0x1b, 0x40,
	0x95, 0x22, 0x4f, 0xb7, 0x34, 0x9f, 0x55, 0x53, 0x30, 0x4c, 0xe6, 0xbc, 0xad, 0xc0, 0xca, 0xec,
	0xeb, 0xa6, 0x1e, 0x1f, 0xb1, 0xcb, 0x33, 0x40, 0xff, 0x0f, 0x33, 0xc0, 0x82, 0xf2, 0x29, 0x9b,
	0xda, 0xcb, 0x4d, 0x7d, 0xa3, 0x41, 0x95, 0x49, 0xee, 0x42, 0x2d, 0x56, 0x71, 0xfb, 0x8c, 0x0f,
	0xb1, 0xb1, 0x1b, 0xb4, 0x8a, 0x1b, 0x2e, 0x1f, 0x92, 0x15, 0xa8, 0x8c, 0x83, 0x30, 0x90, 0x76,
	0x19, 0xbb, 0x25, 0x5b, 0x90, 0x35, 0xa8, 0xc6, 0x6c, 0x12, 0x60, 0x1b, 0x19, 0xe8, 0x38, 0x5b,
	0x93, 0x03, 0x80, 0x44, 0xc4, 0xb2, 0x2f, 0x62, 0x25, 0xad, 0x82, 0xdd, 0xba, 0x39, 0xa7, 0x5b,
	0xcf, 0x9f, 0xa7, 0x75, 0x24, 0x62, 0xd9, 0x53, 0x24, 0x5a, 0x4b, 0x66, 0x26, 0xe9, 0x41, 0x1d,
	0xa3, 0x49, 0x2f, 0x1e, 0x31, 0x69, 0x9b, 0x18, 0xae, 0x75, 0xd3, 0x70, 0xc7, 0xc8, 0xa2, 0x28,
	0x28, 0xb3, 0xd5, 0x69, 0x4f, 0xd9, 0x34, 0xe9, 0x0b, 0x3e, 0x9e, 0xda, 0xd5, 0xa6, 0xbe, 0x51,
	0xa5, 0x55, 0xb5, 0xd1, 0xe3, 0xe3, 0x29, 0xb9, 0x07, 0x30, 0x10, 0x29, 0x97, 0x99, 0xb7, 0x86,
	0xde, 0x1a, 0xee, 0xa0, 0x7b, 0x17, 0xcc, 0x5c, 0xc7, 0x0a, 0xea, 0xf8, 0xfc, 0x26, 0x3a, 0x72,
	0x0d, 0x39, 0x93, 0x3c, 0x82, 0x95, 0x30, 0xe0, 0xfd, 0x4b, 0xd3, 0x68, 0x15, 0xaf, 0x91, 0x84,
	0x01, 0xa7, 0x85, 0x81, 0xa4, 0x18, 0xde, 0x9b, 0xcb, 0x8c, 0x3b, 0x39, 0xc3, 0x7b, 0x53, 0x60,
	0x38, 0x2d, 0xa8, 0x9d, 0x5d, 0x26, 0xa9, 0x82, 0x71, 0xd8, 0x3b, 0x74, 0x2d, 0x8d, 0x00, 0x98,
	0x3b, 0x47, 0x4f, 0xdd, 0xc3, 0xb3, 0x26, 0xcc, 0x16, 0x25, 0x67, 0x15, 0xe0, 0xfd, 0x6d, 0x91,
	0x05, 0x28, 0xef, 0xbb, 0x3f, 0x58, 0x9a, 0xd3, 0x03, 0x33, 0xdf, 0xaa, 0xc3, 0x42, 0xde, 0xee,
	0x59, 0x18, 0x97, 0xcb, 0x40, 0x4e, 0x2d, 0x5d, 0xd9, 0x59, 0x8b, 0x5a, 0x25, 0x65, 0x7f, 0x87,
	0xdf, 0xba, 0x55, 0x56, 0x36, 0xce, 0x93, 0xd8, 0x32, 0x94, 0x00, 0x35, 0x89, 0xac, 0x8a, 0xf3,
	0x9b, 0x0e, 0xab, 0x85, 0x3b, 0xfa, 0x7f, 0x2f, 0xcb, 0x66, 0xfe, 0xb2, 0x64, 0x53, 0xe1, 0xa3,
	0x39, 0xe5, 0xd8, 0x7f, 0x99, 0xbd, 0x2a, 0x84, 0x80, 0x11, 0x8a, 0x98, 0xe1, 0x64, 0xa8, 0x52,
	0xb4, 0xd5, 0x07, 0x8e, 0x05, 0xc6, 0xe6, 0x2f, 0xd3, 0x6c, 0xe1, 0x3c, 0x06, 0x78, 0xcf, 0x56,
	0x3c, 0xee, 0x85, 0x0c, 0xfb, 0xac, 0x46, 0xd1, 0x56, 0xbc, 0x89, 0x37, 0x4e, 0x19, 0x0a, 0xae,
	0xd1, 0x6c, 0xb1, 0xfd, 0x47, 0xe9, 0xdc, 0x63, 0xfd, 0xdc, 0xe3, 0xde, 0x88, 0xc5, 0x64, 0x1f,
	0x8c, 0x83, 0x20, 0x91, 0xe4, 0x93, 0x39, 0xfa, 0x66, 0xaf, 0xfa, 0x5a, 0x73, 0x3e, 0x20, 0x3b,
	0xfe, 0x23, 0x9d, 0x1c, 0x40, 0xe5, 0x7b, 0x4f, 0x0e, 0x4e, 0x3e, 0x4c, 0xb4, 0x23, 0x68, 0x28,
	0x69, 0x3b, 0x7c, 0xf8, 0x01, 0x83, 0x52, 0xa8, 0x60, 0x75, 0xc9, 0xfd, 0x1b, 0xf4, 0xc7, 0xda,
	0xa7, 0xd7, 0x83, 0xb2, 0xa8, 0xbb, 0xcb, 0x6f, 0xdf, 0xad, 0x6b, 0x7f, 0xbd, 0x5b, 0xd7, 0x7e,
	0xff, 0x73, 0x5d, 0xfb, 0xb1, 0x34, 0xd9, 0xfa, 0x5b, 0xd7, 0x7d, 0x13, 0x7f, 0x90, 0xbe, 0xfc,
	0x37, 0x00, 0x00, 0xff, 0xff, 0x21, 0x1e, 0x11, 0xeb, 0xe0, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResourcesManagerClient is the client API for ResourcesManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResourcesManagerClient interface {
	List(ctx context.Context, in *ResourcesRequest, opts ...grpc.CallOption) (ResourcesManager_ListClient, error)
	Watch(ctx context.Context, in *ResourcesRequest, opts ...grpc.CallOption) (ResourcesManager_WatchClient, error)
	ListAndWatch(ctx context.Context, in *ResourcesRequest, opts ...grpc.CallOption) (ResourcesManager_ListAndWatchClient, error)
	// Range gets the resource in the range from the store.
	Range(ctx context.Context, in *ResourceRangeRequest, opts ...grpc.CallOption) (*ResourceRangeResponse, error)
}

type resourcesManagerClient struct {
	cc *grpc.ClientConn
}

func NewResourcesManagerClient(cc *grpc.ClientConn) ResourcesManagerClient {
	return &resourcesManagerClient{cc}
}

func (c *resourcesManagerClient) List(ctx context.Context, in *ResourcesRequest, opts ...grpc.CallOption) (ResourcesManager_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ResourcesManager_serviceDesc.Streams[0], "/mdmp.metadata.ResourcesManager/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &resourcesManagerListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ResourcesManager_ListClient interface {
	Recv() (*ResourcesResponse, error)
	grpc.ClientStream
}

type resourcesManagerListClient struct {
	grpc.ClientStream
}

func (x *resourcesManagerListClient) Recv() (*ResourcesResponse, error) {
	m := new(ResourcesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *resourcesManagerClient) Watch(ctx context.Context, in *ResourcesRequest, opts ...grpc.CallOption) (ResourcesManager_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ResourcesManager_serviceDesc.Streams[1], "/mdmp.metadata.ResourcesManager/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &resourcesManagerWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ResourcesManager_WatchClient interface {
	Recv() (*ResourcesResponse, error)
	grpc.ClientStream
}

type resourcesManagerWatchClient struct {
	grpc.ClientStream
}

func (x *resourcesManagerWatchClient) Recv() (*ResourcesResponse, error) {
	m := new(ResourcesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *resourcesManagerClient) ListAndWatch(ctx context.Context, in *ResourcesRequest, opts ...grpc.CallOption) (ResourcesManager_ListAndWatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ResourcesManager_serviceDesc.Streams[2], "/mdmp.metadata.ResourcesManager/ListAndWatch", opts...)
	if err != nil {
		return nil, err
	}
	x := &resourcesManagerListAndWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ResourcesManager_ListAndWatchClient interface {
	Recv() (*ResourcesResponse, error)
	grpc.ClientStream
}

type resourcesManagerListAndWatchClient struct {
	grpc.ClientStream
}

func (x *resourcesManagerListAndWatchClient) Recv() (*ResourcesResponse, error) {
	m := new(ResourcesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *resourcesManagerClient) Range(ctx context.Context, in *ResourceRangeRequest, opts ...grpc.CallOption) (*ResourceRangeResponse, error) {
	out := new(ResourceRangeResponse)
	err := c.cc.Invoke(ctx, "/mdmp.metadata.ResourcesManager/Range", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResourcesManagerServer is the server API for ResourcesManager service.
type ResourcesManagerServer interface {
	List(*ResourcesRequest, ResourcesManager_ListServer) error
	Watch(*ResourcesRequest, ResourcesManager_WatchServer) error
	ListAndWatch(*ResourcesRequest, ResourcesManager_ListAndWatchServer) error
	// Range gets the resource in the range from the store.
	Range(context.Context, *ResourceRangeRequest) (*ResourceRangeResponse, error)
}

// UnimplementedResourcesManagerServer can be embedded to have forward compatible implementations.
type UnimplementedResourcesManagerServer struct {
}

func (*UnimplementedResourcesManagerServer) List(req *ResourcesRequest, srv ResourcesManager_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedResourcesManagerServer) Watch(req *ResourcesRequest, srv ResourcesManager_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Watch not implemented")
}
func (*UnimplementedResourcesManagerServer) ListAndWatch(req *ResourcesRequest, srv ResourcesManager_ListAndWatchServer) error {
	return status.Errorf(codes.Unimplemented, "method ListAndWatch not implemented")
}
func (*UnimplementedResourcesManagerServer) Range(ctx context.Context, req *ResourceRangeRequest) (*ResourceRangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Range not implemented")
}

func RegisterResourcesManagerServer(s *grpc.Server, srv ResourcesManagerServer) {
	s.RegisterService(&_ResourcesManager_serviceDesc, srv)
}

func _ResourcesManager_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ResourcesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ResourcesManagerServer).List(m, &resourcesManagerListServer{stream})
}

type ResourcesManager_ListServer interface {
	Send(*ResourcesResponse) error
	grpc.ServerStream
}

type resourcesManagerListServer struct {
	grpc.ServerStream
}

func (x *resourcesManagerListServer) Send(m *ResourcesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ResourcesManager_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ResourcesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ResourcesManagerServer).Watch(m, &resourcesManagerWatchServer{stream})
}

type ResourcesManager_WatchServer interface {
	Send(*ResourcesResponse) error
	grpc.ServerStream
}

type resourcesManagerWatchServer struct {
	grpc.ServerStream
}

func (x *resourcesManagerWatchServer) Send(m *ResourcesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ResourcesManager_ListAndWatch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ResourcesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ResourcesManagerServer).ListAndWatch(m, &resourcesManagerListAndWatchServer{stream})
}

type ResourcesManager_ListAndWatchServer interface {
	Send(*ResourcesResponse) error
	grpc.ServerStream
}

type resourcesManagerListAndWatchServer struct {
	grpc.ServerStream
}

func (x *resourcesManagerListAndWatchServer) Send(m *ResourcesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ResourcesManager_Range_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceRangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourcesManagerServer).Range(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mdmp.metadata.ResourcesManager/Range",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourcesManagerServer).Range(ctx, req.(*ResourceRangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResourcesManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mdmp.metadata.ResourcesManager",
	HandlerType: (*ResourcesManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Range",
			Handler:    _ResourcesManager_Range_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _ResourcesManager_List_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Watch",
			Handler:       _ResourcesManager_Watch_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListAndWatch",
			Handler:       _ResourcesManager_ListAndWatch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "metadata/v1/metadata_resource.proto",
}
