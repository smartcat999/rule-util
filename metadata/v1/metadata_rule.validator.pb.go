// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: metadata/v1/metadata_rule.proto

package v1

import (
	fmt "fmt"
	math "math"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *RuleRequest) Validate() error {
	if this.Header != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Header); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Header", err)
		}
	}
	if this.Rule != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Rule); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Rule", err)
		}
	}
	return nil
}
func (this *RuleResponse) Validate() error {
	if this.Header != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Header); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Header", err)
		}
	}
	if this.RuleQl != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.RuleQl); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("RuleQl", err)
		}
	}
	return nil
}
func (this *RouteTableRequest) Validate() error {
	if this.Header != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Header); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Header", err)
		}
	}
	if this.Rule != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Rule); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Rule", err)
		}
	}
	return nil
}
func (this *RouteTableResponse) Validate() error {
	if this.Header != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Header); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Header", err)
		}
	}
	if this.RuleQl != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.RuleQl); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("RuleQl", err)
		}
	}
	return nil
}
