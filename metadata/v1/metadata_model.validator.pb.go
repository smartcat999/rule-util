// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: metadata/v1/metadata_model.proto

package v1

import (
	fmt "fmt"
	math "math"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/gogoproto"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/mwitkow/go-proto-validators"
	_ "github.com/gogo/protobuf/types"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Empty) Validate() error {
	return nil
}
func (this *RequestHeader) Validate() error {
	return nil
}
func (this *ResponseHeader) Validate() error {
	return nil
}
func (this *PingRequest) Validate() error {
	if this.Header != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Header); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Header", err)
		}
	}
	return nil
}
func (this *PongResponse) Validate() error {
	if this.Header != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Header); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Header", err)
		}
	}
	return nil
}
func (this *Entity) Validate() error {
	if this.DeviceInfo != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeviceInfo); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeviceInfo", err)
		}
	}
	if this.EntityInfo != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.EntityInfo); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("EntityInfo", err)
		}
	}
	return nil
}
func (this *DeviceInfo) Validate() error {
	return nil
}
func (this *EntityInfo) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *Topic) Validate() error {
	return nil
}
func (this *Subscription) Validate() error {
	return nil
}
func (this *SubscriptionReply) Validate() error {
	return nil
}
func (this *SubscriptionValue) Validate() error {
	if this.Subscription != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Subscription); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Subscription", err)
		}
	}
	if this.Sink != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Sink); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Sink", err)
		}
	}
	return nil
}
func (this *SubscriptionEvent) Validate() error {
	if this.Kv != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Kv); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Kv", err)
		}
	}
	return nil
}
func (this *Service) Validate() error {
	if this.Sink != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Sink); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Sink", err)
		}
	}
	return nil
}
func (this *ServiceValue) Validate() error {
	if this.Service != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Service); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Service", err)
		}
	}
	return nil
}
func (this *ServiceEvent) Validate() error {
	if this.Kv != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Kv); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Kv", err)
		}
	}
	return nil
}
func (this *Route) Validate() error {
	if this.Service != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Service); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Service", err)
		}
	}
	return nil
}
func (this *RouteValue) Validate() error {
	if this.Route != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Route); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Route", err)
		}
	}
	return nil
}
func (this *RouteEvent) Validate() error {
	if this.Kv != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Kv); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Kv", err)
		}
	}
	return nil
}
func (this *RuleQL) Validate() error {
	for _, item := range this.Actions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Actions", err)
			}
		}
	}
	if this.ErrorAction != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ErrorAction); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ErrorAction", err)
		}
	}
	return nil
}
func (this *RuleValue) Validate() error {
	if this.Rule != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Rule); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Rule", err)
		}
	}
	return nil
}
func (this *RuleEvent) Validate() error {
	if this.Kv != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Kv); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Kv", err)
		}
	}
	return nil
}
func (this *Flow) Validate() error {
	return nil
}
func (this *Action) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *ProtoMessage) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.Time)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("Time", err)
	}
	return nil
}
func (this *ContainerMetrics) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
