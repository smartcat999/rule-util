// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: metadata/v1/pipe_north.proto

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NorthResponse_Status int32

const (
	NorthResponse_FAIL NorthResponse_Status = 0
	NorthResponse_OK   NorthResponse_Status = 200
)

var NorthResponse_Status_name = map[int32]string{
	0:   "FAIL",
	200: "OK",
}

var NorthResponse_Status_value = map[string]int32{
	"FAIL": 0,
	"OK":   200,
}

func (x NorthResponse_Status) String() string {
	return proto.EnumName(NorthResponse_Status_name, int32(x))
}

func (NorthResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d1ddaf7ece6fcacb, []int{1, 0}
}

type NorthRequest struct {
	Header               *RequestHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Body                 *ProtoMessage  `protobuf:"bytes,10,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NorthRequest) Reset()         { *m = NorthRequest{} }
func (m *NorthRequest) String() string { return proto.CompactTextString(m) }
func (*NorthRequest) ProtoMessage()    {}
func (*NorthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1ddaf7ece6fcacb, []int{0}
}
func (m *NorthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NorthRequest.Unmarshal(m, b)
}
func (m *NorthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NorthRequest.Marshal(b, m, deterministic)
}
func (m *NorthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NorthRequest.Merge(m, src)
}
func (m *NorthRequest) XXX_Size() int {
	return xxx_messageInfo_NorthRequest.Size(m)
}
func (m *NorthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NorthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NorthRequest proto.InternalMessageInfo

func (m *NorthRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NorthRequest) GetBody() *ProtoMessage {
	if m != nil {
		return m.Body
	}
	return nil
}

type NorthResponse struct {
	Header               *ResponseHeader      `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Status               NorthResponse_Status `protobuf:"varint,10,opt,name=status,proto3,enum=mdmp.metadata.NorthResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *NorthResponse) Reset()         { *m = NorthResponse{} }
func (m *NorthResponse) String() string { return proto.CompactTextString(m) }
func (*NorthResponse) ProtoMessage()    {}
func (*NorthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1ddaf7ece6fcacb, []int{1}
}
func (m *NorthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NorthResponse.Unmarshal(m, b)
}
func (m *NorthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NorthResponse.Marshal(b, m, deterministic)
}
func (m *NorthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NorthResponse.Merge(m, src)
}
func (m *NorthResponse) XXX_Size() int {
	return xxx_messageInfo_NorthResponse.Size(m)
}
func (m *NorthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NorthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NorthResponse proto.InternalMessageInfo

func (m *NorthResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NorthResponse) GetStatus() NorthResponse_Status {
	if m != nil {
		return m.Status
	}
	return NorthResponse_FAIL
}

func init() {
	proto.RegisterEnum("mdmp.metadata.NorthResponse_Status", NorthResponse_Status_name, NorthResponse_Status_value)
	proto.RegisterType((*NorthRequest)(nil), "mdmp.metadata.NorthRequest")
	proto.RegisterType((*NorthResponse)(nil), "mdmp.metadata.NorthResponse")
}

func init() { proto.RegisterFile("metadata/v1/pipe_north.proto", fileDescriptor_d1ddaf7ece6fcacb) }

var fileDescriptor_d1ddaf7ece6fcacb = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xc1, 0x4e, 0xb3, 0x40,
	0x10, 0x80, 0x7f, 0x08, 0x3f, 0x35, 0xa3, 0x35, 0xcd, 0x9e, 0x1a, 0xc0, 0xa4, 0xc1, 0x8b, 0x17,
	0x97, 0x14, 0xf5, 0xe4, 0x49, 0xd3, 0x18, 0x8d, 0x56, 0x0d, 0xde, 0xbc, 0x34, 0x8b, 0x8c, 0x40,
	0x52, 0xba, 0xc8, 0x2e, 0x24, 0xbe, 0x8d, 0x8f, 0xe3, 0x63, 0x99, 0x0e, 0x34, 0xb1, 0x68, 0xbc,
	0xed, 0x90, 0xef, 0x9b, 0x8f, 0x0c, 0x78, 0x05, 0x6a, 0x91, 0x08, 0x2d, 0x82, 0x66, 0x1a, 0x94,
	0x79, 0x89, 0x8b, 0x95, 0xac, 0x74, 0xc6, 0xcb, 0x4a, 0x6a, 0xc9, 0x86, 0x45, 0x52, 0x94, 0x7c,
	0x83, 0x38, 0xc7, 0x69, 0xae, 0xb3, 0x3a, 0xe6, 0x2f, 0xb2, 0x08, 0x52, 0x99, 0xca, 0x80, 0xa8,
	0xb8, 0x7e, 0xa5, 0x89, 0x06, 0x7a, 0xb5, 0xb6, 0x33, 0xf9, 0xbe, 0x7b, 0xf3, 0x5e, 0x14, 0x32,
	0xc1, 0x65, 0x4b, 0xf8, 0x35, 0xec, 0xdd, 0xaf, 0x73, 0x11, 0xbe, 0xd5, 0xa8, 0x34, 0x3b, 0x05,
	0x3b, 0x43, 0x91, 0x60, 0x35, 0x36, 0x27, 0xc6, 0xd1, 0x6e, 0xe8, 0xf1, 0xad, 0x1f, 0xe0, 0x1d,
	0x77, 0x4d, 0x4c, 0xd4, 0xb1, 0x2c, 0x00, 0x2b, 0x96, 0xc9, 0xfb, 0x18, 0xc8, 0x71, 0x7b, 0xce,
	0xe3, 0xba, 0x34, 0x47, 0xa5, 0x44, 0x8a, 0x11, 0x81, 0xfe, 0x87, 0x01, 0xc3, 0xae, 0xab, 0x4a,
	0xb9, 0x52, 0xc8, 0xce, 0x7a, 0xe1, 0x83, 0x1f, 0xe1, 0x16, 0xec, 0x95, 0xcf, 0xc1, 0x56, 0x5a,
	0xe8, 0x5a, 0x51, 0x7b, 0x3f, 0x3c, 0xec, 0x69, 0x5b, 0x11, 0xfe, 0x44, 0x68, 0xd4, 0x29, 0xbe,
	0x0b, 0x76, 0xfb, 0x85, 0xed, 0x80, 0x75, 0x75, 0x71, 0x73, 0x37, 0xfa, 0xc7, 0x06, 0x60, 0x3e,
	0xdc, 0x8e, 0x3e, 0x8d, 0x70, 0x0e, 0xff, 0x49, 0x66, 0x33, 0x18, 0xcc, 0x70, 0x99, 0x37, 0x58,
	0x31, 0xf7, 0xf7, 0xed, 0x74, 0x12, 0xc7, 0xfb, 0x2b, 0x7d, 0x69, 0x3d, 0x9b, 0xcd, 0x34, 0xb6,
	0xe9, 0xea, 0x27, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x1a, 0x35, 0xd6, 0xf5, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NorthClient is the client API for North service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NorthClient interface {
	Deliver(ctx context.Context, in *NorthRequest, opts ...grpc.CallOption) (*NorthResponse, error)
}

type northClient struct {
	cc *grpc.ClientConn
}

func NewNorthClient(cc *grpc.ClientConn) NorthClient {
	return &northClient{cc}
}

func (c *northClient) Deliver(ctx context.Context, in *NorthRequest, opts ...grpc.CallOption) (*NorthResponse, error) {
	out := new(NorthResponse)
	err := c.cc.Invoke(ctx, "/mdmp.metadata.North/Deliver", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NorthServer is the server API for North service.
type NorthServer interface {
	Deliver(context.Context, *NorthRequest) (*NorthResponse, error)
}

// UnimplementedNorthServer can be embedded to have forward compatible implementations.
type UnimplementedNorthServer struct {
}

func (*UnimplementedNorthServer) Deliver(ctx context.Context, req *NorthRequest) (*NorthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Deliver not implemented")
}

func RegisterNorthServer(s *grpc.Server, srv NorthServer) {
	s.RegisterService(&_North_serviceDesc, srv)
}

func _North_Deliver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NorthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthServer).Deliver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mdmp.metadata.North/Deliver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthServer).Deliver(ctx, req.(*NorthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _North_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mdmp.metadata.North",
	HandlerType: (*NorthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Deliver",
			Handler:    _North_Deliver_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "metadata/v1/pipe_north.proto",
}
