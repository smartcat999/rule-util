// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: metadata/v1/metadata_resource.proto

package v1

import (
	fmt "fmt"
	math "math"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/gogoproto"
	_ "github.com/gogo/googleapis/google/api"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *ResourcesRequest) Validate() error {
	if this.Header != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Header); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Header", err)
		}
	}
	return nil
}
func (this *ResourcesResponse) Validate() error {
	if this.Header != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Header); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Header", err)
		}
	}
	for _, item := range this.Body {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Body", err)
			}
		}
	}
	return nil
}
func (this *ResourceObject) Validate() error {
	if oneOfNester, ok := this.GetBody().(*ResourceObject_InitConfig); ok {
		if oneOfNester.InitConfig != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.InitConfig); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("InitConfig", err)
			}
		}
	}
	if oneOfNester, ok := this.GetBody().(*ResourceObject_Stream); ok {
		if oneOfNester.Stream != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Stream); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Stream", err)
			}
		}
	}
	if oneOfNester, ok := this.GetBody().(*ResourceObject_Subscription); ok {
		if oneOfNester.Subscription != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Subscription); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Subscription", err)
			}
		}
	}
	if oneOfNester, ok := this.GetBody().(*ResourceObject_Rule); ok {
		if oneOfNester.Rule != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Rule); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Rule", err)
			}
		}
	}
	if oneOfNester, ok := this.GetBody().(*ResourceObject_Route); ok {
		if oneOfNester.Route != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Route); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Route", err)
			}
		}
	}
	if oneOfNester, ok := this.GetBody().(*ResourceObject_Service); ok {
		if oneOfNester.Service != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Service); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Service", err)
			}
		}
	}
	return nil
}
func (this *Init) Validate() error {
	return nil
}
func (this *Stream) Validate() error {
	for _, item := range this.Source {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Source", err)
			}
		}
	}
	if this.Sink != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Sink); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Sink", err)
		}
	}
	if this.PubSubTopic != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.PubSubTopic); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("PubSubTopic", err)
		}
	}
	if this.PubSubQueue != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.PubSubQueue); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("PubSubQueue", err)
		}
	}
	if this.RuleTopic != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.RuleTopic); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("RuleTopic", err)
		}
	}
	return nil
}
func (this *ResourceRangeRequest) Validate() error {
	if this.Header != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Header); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Header", err)
		}
	}
	return nil
}
func (this *ResourceRangeResponse) Validate() error {
	if this.Header != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Header); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Header", err)
		}
	}
	for _, item := range this.Body {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Body", err)
			}
		}
	}
	return nil
}
func (this *ResourceKV) Validate() error {
	return nil
}
