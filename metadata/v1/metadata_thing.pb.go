// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: metadata/v1/metadata_thing.proto

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type EntityInfoRequest_Status int32

const (
	EntityInfoRequest_Noop                   EntityInfoRequest_Status = 0
	EntityInfoRequest_NotReachable           EntityInfoRequest_Status = -1
	EntityInfoRequest_OK200                  EntityInfoRequest_Status = 200
	EntityInfoRequest_NotFound404            EntityInfoRequest_Status = 404
	EntityInfoRequest_InternalServerError500 EntityInfoRequest_Status = 500
)

var EntityInfoRequest_Status_name = map[int32]string{
	0:   "Noop",
	-1:  "NotReachable",
	200: "OK200",
	404: "NotFound404",
	500: "InternalServerError500",
}

var EntityInfoRequest_Status_value = map[string]int32{
	"Noop":                   0,
	"NotReachable":           -1,
	"OK200":                  200,
	"NotFound404":            404,
	"InternalServerError500": 500,
}

func (x EntityInfoRequest_Status) String() string {
	return proto.EnumName(EntityInfoRequest_Status_name, int32(x))
}

func (EntityInfoRequest_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_656bbf79ae4f5fe1, []int{8, 0}
}

type ConnectRequest struct {
	Header               *RequestHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	PacketId             int64          `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Source               *Entity        `protobuf:"bytes,11,opt,name=source,proto3" json:"source,omitempty"`
	Server               string         `protobuf:"bytes,12,opt,name=server,proto3" json:"server,omitempty"`
	SessionType          SessionType    `protobuf:"varint,13,opt,name=session_type,json=sessionType,proto3,enum=mdmp.metadata.SessionType" json:"session_type,omitempty"`
	Payload              []byte         `protobuf:"bytes,14,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_656bbf79ae4f5fe1, []int{0}
}
func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (m *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(m, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

func (m *ConnectRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ConnectRequest) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *ConnectRequest) GetSource() *Entity {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *ConnectRequest) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *ConnectRequest) GetSessionType() SessionType {
	if m != nil {
		return m.SessionType
	}
	return SessionType_TRANSIENT
}

func (m *ConnectRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type ConnectResponse struct {
	Header               *ResponseHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	PacketId             int64           `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Source               *Entity         `protobuf:"bytes,11,opt,name=source,proto3" json:"source,omitempty"`
	SessionType          SessionType     `protobuf:"varint,12,opt,name=session_type,json=sessionType,proto3,enum=mdmp.metadata.SessionType" json:"session_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ConnectResponse) Reset()         { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()    {}
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_656bbf79ae4f5fe1, []int{1}
}
func (m *ConnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectResponse.Unmarshal(m, b)
}
func (m *ConnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectResponse.Marshal(b, m, deterministic)
}
func (m *ConnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectResponse.Merge(m, src)
}
func (m *ConnectResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectResponse.Size(m)
}
func (m *ConnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectResponse proto.InternalMessageInfo

func (m *ConnectResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ConnectResponse) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *ConnectResponse) GetSource() *Entity {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *ConnectResponse) GetSessionType() SessionType {
	if m != nil {
		return m.SessionType
	}
	return SessionType_TRANSIENT
}

type DisConnectRequest struct {
	Header               *RequestHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	PacketId             int64          `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Source               *Entity        `protobuf:"bytes,11,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DisConnectRequest) Reset()         { *m = DisConnectRequest{} }
func (m *DisConnectRequest) String() string { return proto.CompactTextString(m) }
func (*DisConnectRequest) ProtoMessage()    {}
func (*DisConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_656bbf79ae4f5fe1, []int{2}
}
func (m *DisConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisConnectRequest.Unmarshal(m, b)
}
func (m *DisConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisConnectRequest.Marshal(b, m, deterministic)
}
func (m *DisConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisConnectRequest.Merge(m, src)
}
func (m *DisConnectRequest) XXX_Size() int {
	return xxx_messageInfo_DisConnectRequest.Size(m)
}
func (m *DisConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisConnectRequest proto.InternalMessageInfo

func (m *DisConnectRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DisConnectRequest) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *DisConnectRequest) GetSource() *Entity {
	if m != nil {
		return m.Source
	}
	return nil
}

type DisConnectResponse struct {
	Header               *ResponseHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	PacketId             int64           `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Dup                  bool            `protobuf:"varint,11,opt,name=dup,proto3" json:"dup,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DisConnectResponse) Reset()         { *m = DisConnectResponse{} }
func (m *DisConnectResponse) String() string { return proto.CompactTextString(m) }
func (*DisConnectResponse) ProtoMessage()    {}
func (*DisConnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_656bbf79ae4f5fe1, []int{3}
}
func (m *DisConnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisConnectResponse.Unmarshal(m, b)
}
func (m *DisConnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisConnectResponse.Marshal(b, m, deterministic)
}
func (m *DisConnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisConnectResponse.Merge(m, src)
}
func (m *DisConnectResponse) XXX_Size() int {
	return xxx_messageInfo_DisConnectResponse.Size(m)
}
func (m *DisConnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisConnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisConnectResponse proto.InternalMessageInfo

func (m *DisConnectResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DisConnectResponse) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *DisConnectResponse) GetDup() bool {
	if m != nil {
		return m.Dup
	}
	return false
}

type HeartbeatRequest struct {
	Header               *RequestHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	PacketId             int64          `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Source               *Entity        `protobuf:"bytes,11,opt,name=source,proto3" json:"source,omitempty"`
	Server               string         `protobuf:"bytes,12,opt,name=server,proto3" json:"server,omitempty"`
	EntityId             string         `protobuf:"bytes,13,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *HeartbeatRequest) Reset()         { *m = HeartbeatRequest{} }
func (m *HeartbeatRequest) String() string { return proto.CompactTextString(m) }
func (*HeartbeatRequest) ProtoMessage()    {}
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_656bbf79ae4f5fe1, []int{4}
}
func (m *HeartbeatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatRequest.Unmarshal(m, b)
}
func (m *HeartbeatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatRequest.Marshal(b, m, deterministic)
}
func (m *HeartbeatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatRequest.Merge(m, src)
}
func (m *HeartbeatRequest) XXX_Size() int {
	return xxx_messageInfo_HeartbeatRequest.Size(m)
}
func (m *HeartbeatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatRequest proto.InternalMessageInfo

func (m *HeartbeatRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HeartbeatRequest) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *HeartbeatRequest) GetSource() *Entity {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *HeartbeatRequest) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *HeartbeatRequest) GetEntityId() string {
	if m != nil {
		return m.EntityId
	}
	return ""
}

type HeartbeatResponse struct {
	Header               *ResponseHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	PacketId             int64           `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *HeartbeatResponse) Reset()         { *m = HeartbeatResponse{} }
func (m *HeartbeatResponse) String() string { return proto.CompactTextString(m) }
func (*HeartbeatResponse) ProtoMessage()    {}
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_656bbf79ae4f5fe1, []int{5}
}
func (m *HeartbeatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatResponse.Unmarshal(m, b)
}
func (m *HeartbeatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatResponse.Marshal(b, m, deterministic)
}
func (m *HeartbeatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatResponse.Merge(m, src)
}
func (m *HeartbeatResponse) XXX_Size() int {
	return xxx_messageInfo_HeartbeatResponse.Size(m)
}
func (m *HeartbeatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatResponse proto.InternalMessageInfo

func (m *HeartbeatResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HeartbeatResponse) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

type EntityRequest struct {
	Header               *RequestHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	PacketId             int64          `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	EntityId             string         `protobuf:"bytes,11,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EntityRequest) Reset()         { *m = EntityRequest{} }
func (m *EntityRequest) String() string { return proto.CompactTextString(m) }
func (*EntityRequest) ProtoMessage()    {}
func (*EntityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_656bbf79ae4f5fe1, []int{6}
}
func (m *EntityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityRequest.Unmarshal(m, b)
}
func (m *EntityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityRequest.Marshal(b, m, deterministic)
}
func (m *EntityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityRequest.Merge(m, src)
}
func (m *EntityRequest) XXX_Size() int {
	return xxx_messageInfo_EntityRequest.Size(m)
}
func (m *EntityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntityRequest proto.InternalMessageInfo

func (m *EntityRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *EntityRequest) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *EntityRequest) GetEntityId() string {
	if m != nil {
		return m.EntityId
	}
	return ""
}

type EntityResponse struct {
	Header               *ResponseHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	PacketId             int64           `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Entity               *Entity         `protobuf:"bytes,11,opt,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *EntityResponse) Reset()         { *m = EntityResponse{} }
func (m *EntityResponse) String() string { return proto.CompactTextString(m) }
func (*EntityResponse) ProtoMessage()    {}
func (*EntityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_656bbf79ae4f5fe1, []int{7}
}
func (m *EntityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityResponse.Unmarshal(m, b)
}
func (m *EntityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityResponse.Marshal(b, m, deterministic)
}
func (m *EntityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityResponse.Merge(m, src)
}
func (m *EntityResponse) XXX_Size() int {
	return xxx_messageInfo_EntityResponse.Size(m)
}
func (m *EntityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EntityResponse proto.InternalMessageInfo

func (m *EntityResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *EntityResponse) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *EntityResponse) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type EntityInfoRequest struct {
	Header               *RequestHeader           `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	PacketId             int64                    `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Entity               *Entity                  `protobuf:"bytes,11,opt,name=entity,proto3" json:"entity,omitempty"`
	Status               EntityInfoRequest_Status `protobuf:"varint,12,opt,name=status,proto3,enum=mdmp.metadata.EntityInfoRequest_Status" json:"status,omitempty"`
	Topic                string                   `protobuf:"bytes,13,opt,name=topic,proto3" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *EntityInfoRequest) Reset()         { *m = EntityInfoRequest{} }
func (m *EntityInfoRequest) String() string { return proto.CompactTextString(m) }
func (*EntityInfoRequest) ProtoMessage()    {}
func (*EntityInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_656bbf79ae4f5fe1, []int{8}
}
func (m *EntityInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityInfoRequest.Unmarshal(m, b)
}
func (m *EntityInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityInfoRequest.Marshal(b, m, deterministic)
}
func (m *EntityInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityInfoRequest.Merge(m, src)
}
func (m *EntityInfoRequest) XXX_Size() int {
	return xxx_messageInfo_EntityInfoRequest.Size(m)
}
func (m *EntityInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntityInfoRequest proto.InternalMessageInfo

func (m *EntityInfoRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *EntityInfoRequest) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *EntityInfoRequest) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *EntityInfoRequest) GetStatus() EntityInfoRequest_Status {
	if m != nil {
		return m.Status
	}
	return EntityInfoRequest_Noop
}

func (m *EntityInfoRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func init() {
	proto.RegisterEnum("mdmp.metadata.EntityInfoRequest_Status", EntityInfoRequest_Status_name, EntityInfoRequest_Status_value)
	proto.RegisterType((*ConnectRequest)(nil), "mdmp.metadata.ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "mdmp.metadata.ConnectResponse")
	proto.RegisterType((*DisConnectRequest)(nil), "mdmp.metadata.DisConnectRequest")
	proto.RegisterType((*DisConnectResponse)(nil), "mdmp.metadata.DisConnectResponse")
	proto.RegisterType((*HeartbeatRequest)(nil), "mdmp.metadata.HeartbeatRequest")
	proto.RegisterType((*HeartbeatResponse)(nil), "mdmp.metadata.HeartbeatResponse")
	proto.RegisterType((*EntityRequest)(nil), "mdmp.metadata.EntityRequest")
	proto.RegisterType((*EntityResponse)(nil), "mdmp.metadata.EntityResponse")
	proto.RegisterType((*EntityInfoRequest)(nil), "mdmp.metadata.EntityInfoRequest")
}

func init() { proto.RegisterFile("metadata/v1/metadata_thing.proto", fileDescriptor_656bbf79ae4f5fe1) }

var fileDescriptor_656bbf79ae4f5fe1 = []byte{
	// 633 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x96, 0xbf, 0x6f, 0xd3, 0x40,
	0x14, 0xc7, 0x71, 0xd2, 0xba, 0xc9, 0x8b, 0x13, 0xdc, 0x13, 0x54, 0xc6, 0x6d, 0xc1, 0x78, 0x21,
	0x4b, 0x9d, 0x34, 0xb4, 0x23, 0x42, 0x82, 0x16, 0x35, 0x42, 0x4a, 0x85, 0xdb, 0x89, 0xa5, 0xba,
	0xd8, 0xd7, 0xc4, 0x22, 0xf1, 0x19, 0xdf, 0xb9, 0x52, 0x58, 0x18, 0x58, 0xd9, 0x80, 0xff, 0x09,
	0x66, 0x24, 0xfe, 0x12, 0x76, 0x50, 0xef, 0xce, 0xa5, 0x75, 0x5a, 0xaa, 0x0e, 0x96, 0x20, 0xd3,
	0xbd, 0xbb, 0x8f, 0xbf, 0x7e, 0xbf, 0xee, 0xc5, 0xe0, 0x4c, 0x09, 0xc7, 0x21, 0xe6, 0xb8, 0x73,
	0xb2, 0xd9, 0xc9, 0xd7, 0x47, 0x7c, 0x1c, 0xc5, 0x23, 0x2f, 0x49, 0x29, 0xa7, 0xa8, 0x39, 0x0d,
	0xa7, 0x89, 0x97, 0x1f, 0xd9, 0x1b, 0xa3, 0x88, 0x8f, 0xb3, 0xa1, 0x17, 0xd0, 0x69, 0x67, 0x44,
	0x47, 0xb4, 0x23, 0xa8, 0x61, 0x76, 0x2c, 0x2c, 0x61, 0x88, 0x95, 0x7c, 0xda, 0xbe, 0x5c, 0x7f,
	0x4a, 0x43, 0x32, 0x91, 0x84, 0xfb, 0xa1, 0x02, 0xad, 0xe7, 0x34, 0x8e, 0x49, 0xc0, 0x7d, 0xf2,
	0x36, 0x23, 0x8c, 0xa3, 0x2d, 0xd0, 0xc7, 0x04, 0x87, 0x24, 0xb5, 0x2a, 0x8e, 0xd6, 0x6e, 0xf4,
	0xd6, 0xbc, 0x0b, 0x3e, 0x78, 0x8a, 0xdb, 0x13, 0x8c, 0xaf, 0x58, 0xb4, 0x0a, 0xf5, 0x04, 0x07,
	0x6f, 0x08, 0x3f, 0x8a, 0x42, 0x0b, 0x1c, 0xad, 0x5d, 0xf5, 0x6b, 0x72, 0xa3, 0x1f, 0xa2, 0x0d,
	0xd0, 0x19, 0xcd, 0xd2, 0x80, 0x58, 0x0d, 0x21, 0x79, 0xb7, 0x20, 0xb9, 0x1b, 0xf3, 0x88, 0xcf,
	0x7c, 0x05, 0xa1, 0x15, 0xd0, 0x19, 0x49, 0x4f, 0x48, 0x6a, 0x19, 0x8e, 0xd6, 0xae, 0xfb, 0xca,
	0x42, 0x4f, 0xc0, 0x60, 0x84, 0xb1, 0x88, 0xc6, 0x47, 0x7c, 0x96, 0x10, 0xab, 0xe9, 0x68, 0xed,
	0x56, 0xcf, 0x2e, 0x88, 0x1d, 0x48, 0xe4, 0x70, 0x96, 0x10, 0xbf, 0xc1, 0xfe, 0x18, 0xc8, 0x82,
	0xa5, 0x04, 0xcf, 0x26, 0x14, 0x87, 0x56, 0xcb, 0xd1, 0xda, 0x86, 0x9f, 0x9b, 0xee, 0x77, 0x0d,
	0x6e, 0x9f, 0x65, 0x81, 0x25, 0x34, 0x66, 0x04, 0x6d, 0x17, 0xd2, 0xb0, 0x3e, 0x97, 0x06, 0x09,
	0x96, 0x98, 0x87, 0x62, 0xbc, 0xc6, 0x8d, 0xe2, 0x75, 0xbf, 0x68, 0xb0, 0xbc, 0x13, 0xb1, 0x7f,
	0xad, 0xbc, 0xee, 0x3b, 0x40, 0xe7, 0xdd, 0x2a, 0x31, 0xdf, 0x26, 0x54, 0xc3, 0x2c, 0x11, 0x5e,
	0xd5, 0xfc, 0xd3, 0xa5, 0xfb, 0x4d, 0x03, 0x73, 0x8f, 0xe0, 0x94, 0x0f, 0x09, 0xfe, 0x0f, 0x3a,
	0x7e, 0x15, 0xea, 0x44, 0x90, 0xa7, 0xef, 0x68, 0x8a, 0xa3, 0x9a, 0xdc, 0xe8, 0x87, 0xee, 0x08,
	0x96, 0xcf, 0x85, 0x52, 0x5e, 0x1a, 0xdd, 0xf7, 0xd0, 0x54, 0xfe, 0x96, 0x97, 0xb0, 0x0b, 0x91,
	0x36, 0x0a, 0x91, 0x7e, 0xd2, 0xa0, 0x95, 0x7b, 0x50, 0xee, 0xf5, 0x94, 0xaf, 0xbc, 0xa6, 0x68,
	0x12, 0x72, 0x7f, 0x54, 0x60, 0x59, 0x6e, 0xf5, 0xe3, 0x63, 0x5a, 0x6e, 0x33, 0xdd, 0xc0, 0x2f,
	0xf4, 0x14, 0x74, 0xc6, 0x31, 0xcf, 0x98, 0x1a, 0x18, 0x8f, 0x2e, 0xc5, 0xcf, 0xf9, 0xec, 0x1d,
	0x08, 0xdc, 0x57, 0x8f, 0xa1, 0x3b, 0xb0, 0xc8, 0x69, 0x12, 0x05, 0xaa, 0xe3, 0xa4, 0xe1, 0x8e,
	0x41, 0x97, 0x1c, 0xaa, 0xc1, 0xc2, 0x80, 0xd2, 0xc4, 0xbc, 0x85, 0xee, 0x81, 0x31, 0xa0, 0xdc,
	0x27, 0x38, 0x18, 0xe3, 0xe1, 0x84, 0x98, 0xbf, 0xf2, 0x9f, 0x86, 0x00, 0x16, 0xf7, 0x5f, 0xf6,
	0xba, 0x5d, 0xf3, 0xab, 0x86, 0x4c, 0x68, 0x0c, 0x28, 0x7f, 0x41, 0xb3, 0x38, 0xdc, 0xea, 0x6e,
	0x99, 0x9f, 0xab, 0x68, 0x15, 0x56, 0xfa, 0x31, 0x27, 0x69, 0x8c, 0x27, 0x07, 0xa2, 0xd5, 0x77,
	0xd3, 0x94, 0xa6, 0xdb, 0xdd, 0xae, 0xf9, 0xb3, 0xda, 0xfb, 0x58, 0x85, 0xc5, 0xc3, 0xd3, 0x3f,
	0x41, 0xb4, 0x07, 0x4b, 0x6a, 0x4e, 0xa0, 0x62, 0x81, 0x2f, 0x8e, 0x35, 0xfb, 0xfe, 0x55, 0xc7,
	0xaa, 0x5f, 0x5e, 0x01, 0xec, 0x44, 0x2c, 0x50, 0x62, 0x4e, 0x81, 0x9e, 0x1b, 0x93, 0xf6, 0xc3,
	0xbf, 0x10, 0x4a, 0x72, 0x00, 0xf5, 0xb3, 0xfb, 0x87, 0x1e, 0x14, 0xf8, 0xe2, 0x90, 0xb1, 0x9d,
	0xab, 0x01, 0xa5, 0xb7, 0x0b, 0xba, 0x2c, 0x0d, 0x5a, 0xbb, 0xbc, 0xc0, 0x4a, 0x69, 0xfd, 0x8a,
	0x53, 0x25, 0xb3, 0x0f, 0x46, 0xbe, 0x93, 0xd0, 0x74, 0x3e, 0xd6, 0xb9, 0xf2, 0x5f, 0x23, 0xf8,
	0x6c, 0xe1, 0x75, 0xe5, 0x64, 0x73, 0xa8, 0x8b, 0x0f, 0x86, 0xc7, 0xbf, 0x03, 0x00, 0x00, 0xff,
	0xff, 0x80, 0xf8, 0x83, 0xbf, 0xb4, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ThingClient is the client API for Thing service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ThingClient interface {
	Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error)
	Disconnect(ctx context.Context, in *DisConnectRequest, opts ...grpc.CallOption) (*DisConnectResponse, error)
	Heartbeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*HeartbeatResponse, error)
	// Entity (Device...)
	Entity(ctx context.Context, in *EntityRequest, opts ...grpc.CallOption) (*EntityResponse, error)
	EntityReport(ctx context.Context, in *EntityInfoRequest, opts ...grpc.CallOption) (*EntityResponse, error)
}

type thingClient struct {
	cc *grpc.ClientConn
}

func NewThingClient(cc *grpc.ClientConn) ThingClient {
	return &thingClient{cc}
}

func (c *thingClient) Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error) {
	out := new(ConnectResponse)
	err := c.cc.Invoke(ctx, "/mdmp.metadata.Thing/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thingClient) Disconnect(ctx context.Context, in *DisConnectRequest, opts ...grpc.CallOption) (*DisConnectResponse, error) {
	out := new(DisConnectResponse)
	err := c.cc.Invoke(ctx, "/mdmp.metadata.Thing/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thingClient) Heartbeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*HeartbeatResponse, error) {
	out := new(HeartbeatResponse)
	err := c.cc.Invoke(ctx, "/mdmp.metadata.Thing/Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thingClient) Entity(ctx context.Context, in *EntityRequest, opts ...grpc.CallOption) (*EntityResponse, error) {
	out := new(EntityResponse)
	err := c.cc.Invoke(ctx, "/mdmp.metadata.Thing/Entity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thingClient) EntityReport(ctx context.Context, in *EntityInfoRequest, opts ...grpc.CallOption) (*EntityResponse, error) {
	out := new(EntityResponse)
	err := c.cc.Invoke(ctx, "/mdmp.metadata.Thing/EntityReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ThingServer is the server API for Thing service.
type ThingServer interface {
	Connect(context.Context, *ConnectRequest) (*ConnectResponse, error)
	Disconnect(context.Context, *DisConnectRequest) (*DisConnectResponse, error)
	Heartbeat(context.Context, *HeartbeatRequest) (*HeartbeatResponse, error)
	// Entity (Device...)
	Entity(context.Context, *EntityRequest) (*EntityResponse, error)
	EntityReport(context.Context, *EntityInfoRequest) (*EntityResponse, error)
}

// UnimplementedThingServer can be embedded to have forward compatible implementations.
type UnimplementedThingServer struct {
}

func (*UnimplementedThingServer) Connect(ctx context.Context, req *ConnectRequest) (*ConnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedThingServer) Disconnect(ctx context.Context, req *DisConnectRequest) (*DisConnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disconnect not implemented")
}
func (*UnimplementedThingServer) Heartbeat(ctx context.Context, req *HeartbeatRequest) (*HeartbeatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Heartbeat not implemented")
}
func (*UnimplementedThingServer) Entity(ctx context.Context, req *EntityRequest) (*EntityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Entity not implemented")
}
func (*UnimplementedThingServer) EntityReport(ctx context.Context, req *EntityInfoRequest) (*EntityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EntityReport not implemented")
}

func RegisterThingServer(s *grpc.Server, srv ThingServer) {
	s.RegisterService(&_Thing_serviceDesc, srv)
}

func _Thing_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThingServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mdmp.metadata.Thing/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThingServer).Connect(ctx, req.(*ConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Thing_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThingServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mdmp.metadata.Thing/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThingServer).Disconnect(ctx, req.(*DisConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Thing_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThingServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mdmp.metadata.Thing/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThingServer).Heartbeat(ctx, req.(*HeartbeatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Thing_Entity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThingServer).Entity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mdmp.metadata.Thing/Entity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThingServer).Entity(ctx, req.(*EntityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Thing_EntityReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntityInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThingServer).EntityReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mdmp.metadata.Thing/EntityReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThingServer).EntityReport(ctx, req.(*EntityInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Thing_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mdmp.metadata.Thing",
	HandlerType: (*ThingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _Thing_Connect_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _Thing_Disconnect_Handler,
		},
		{
			MethodName: "Heartbeat",
			Handler:    _Thing_Heartbeat_Handler,
		},
		{
			MethodName: "Entity",
			Handler:    _Thing_Entity_Handler,
		},
		{
			MethodName: "EntityReport",
			Handler:    _Thing_EntityReport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "metadata/v1/metadata_thing.proto",
}
