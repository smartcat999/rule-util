// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: metadata/v1/metadata_rule_node.proto

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type RuleExecRequest struct {
	UserId               string        `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PacketId             int64         `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Rule                 *RuleQL       `protobuf:"bytes,11,opt,name=rule,proto3" json:"rule,omitempty"`
	Message              *ProtoMessage `protobuf:"bytes,12,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RuleExecRequest) Reset()         { *m = RuleExecRequest{} }
func (m *RuleExecRequest) String() string { return proto.CompactTextString(m) }
func (*RuleExecRequest) ProtoMessage()    {}
func (*RuleExecRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c43ee016febede, []int{0}
}
func (m *RuleExecRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleExecRequest.Unmarshal(m, b)
}
func (m *RuleExecRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleExecRequest.Marshal(b, m, deterministic)
}
func (m *RuleExecRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleExecRequest.Merge(m, src)
}
func (m *RuleExecRequest) XXX_Size() int {
	return xxx_messageInfo_RuleExecRequest.Size(m)
}
func (m *RuleExecRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleExecRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RuleExecRequest proto.InternalMessageInfo

func (m *RuleExecRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *RuleExecRequest) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *RuleExecRequest) GetRule() *RuleQL {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *RuleExecRequest) GetMessage() *ProtoMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

type RuleExecResponse struct {
	UserId               string        `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ErrCode              int32         `protobuf:"varint,2,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg               string        `protobuf:"bytes,3,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	PacketId             int64         `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Rule                 *RuleQL       `protobuf:"bytes,11,opt,name=rule,proto3" json:"rule,omitempty"`
	Message              *ProtoMessage `protobuf:"bytes,12,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RuleExecResponse) Reset()         { *m = RuleExecResponse{} }
func (m *RuleExecResponse) String() string { return proto.CompactTextString(m) }
func (*RuleExecResponse) ProtoMessage()    {}
func (*RuleExecResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c43ee016febede, []int{1}
}
func (m *RuleExecResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleExecResponse.Unmarshal(m, b)
}
func (m *RuleExecResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleExecResponse.Marshal(b, m, deterministic)
}
func (m *RuleExecResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleExecResponse.Merge(m, src)
}
func (m *RuleExecResponse) XXX_Size() int {
	return xxx_messageInfo_RuleExecResponse.Size(m)
}
func (m *RuleExecResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleExecResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RuleExecResponse proto.InternalMessageInfo

func (m *RuleExecResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *RuleExecResponse) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *RuleExecResponse) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *RuleExecResponse) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *RuleExecResponse) GetRule() *RuleQL {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *RuleExecResponse) GetMessage() *ProtoMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

type ActionExecRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PacketId             int64    `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Action               *Action  `protobuf:"bytes,11,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionExecRequest) Reset()         { *m = ActionExecRequest{} }
func (m *ActionExecRequest) String() string { return proto.CompactTextString(m) }
func (*ActionExecRequest) ProtoMessage()    {}
func (*ActionExecRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c43ee016febede, []int{2}
}
func (m *ActionExecRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionExecRequest.Unmarshal(m, b)
}
func (m *ActionExecRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionExecRequest.Marshal(b, m, deterministic)
}
func (m *ActionExecRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionExecRequest.Merge(m, src)
}
func (m *ActionExecRequest) XXX_Size() int {
	return xxx_messageInfo_ActionExecRequest.Size(m)
}
func (m *ActionExecRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionExecRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActionExecRequest proto.InternalMessageInfo

func (m *ActionExecRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ActionExecRequest) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *ActionExecRequest) GetAction() *Action {
	if m != nil {
		return m.Action
	}
	return nil
}

type ActionExecResponse struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ErrCode              int32    `protobuf:"varint,2,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg               string   `protobuf:"bytes,3,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	PacketId             int64    `protobuf:"varint,10,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionExecResponse) Reset()         { *m = ActionExecResponse{} }
func (m *ActionExecResponse) String() string { return proto.CompactTextString(m) }
func (*ActionExecResponse) ProtoMessage()    {}
func (*ActionExecResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c43ee016febede, []int{3}
}
func (m *ActionExecResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionExecResponse.Unmarshal(m, b)
}
func (m *ActionExecResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionExecResponse.Marshal(b, m, deterministic)
}
func (m *ActionExecResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionExecResponse.Merge(m, src)
}
func (m *ActionExecResponse) XXX_Size() int {
	return xxx_messageInfo_ActionExecResponse.Size(m)
}
func (m *ActionExecResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionExecResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActionExecResponse proto.InternalMessageInfo

func (m *ActionExecResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ActionExecResponse) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *ActionExecResponse) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *ActionExecResponse) GetPacketId() int64 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func init() {
	proto.RegisterType((*RuleExecRequest)(nil), "mdmp.metadata.RuleExecRequest")
	proto.RegisterType((*RuleExecResponse)(nil), "mdmp.metadata.RuleExecResponse")
	proto.RegisterType((*ActionExecRequest)(nil), "mdmp.metadata.ActionExecRequest")
	proto.RegisterType((*ActionExecResponse)(nil), "mdmp.metadata.ActionExecResponse")
}

func init() {
	proto.RegisterFile("metadata/v1/metadata_rule_node.proto", fileDescriptor_33c43ee016febede)
}

var fileDescriptor_33c43ee016febede = []byte{
	// 374 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x93, 0xcf, 0x4e, 0xea, 0x40,
	0x14, 0xc6, 0x53, 0xe0, 0xf2, 0xe7, 0x70, 0x6f, 0xee, 0xbd, 0x4d, 0x8c, 0x15, 0x12, 0xad, 0xc4,
	0x45, 0x5d, 0xd0, 0x06, 0x8c, 0x0f, 0xa0, 0xc6, 0x05, 0x51, 0x8c, 0xcc, 0xd2, 0x4d, 0x53, 0x3a,
	0xc7, 0x4a, 0xa4, 0x4c, 0x9d, 0x99, 0x12, 0x56, 0xbe, 0x8f, 0x4b, 0x5f, 0xc8, 0x67, 0x31, 0x33,
	0x53, 0x22, 0x1a, 0x70, 0x63, 0xa2, 0xbb, 0x39, 0x3d, 0xbf, 0x73, 0xbe, 0x6f, 0xbe, 0xb6, 0x70,
	0x90, 0xa2, 0x8c, 0x68, 0x24, 0xa3, 0x60, 0xde, 0x0b, 0x96, 0xe7, 0x90, 0xe7, 0x53, 0x0c, 0x67,
	0x8c, 0xa2, 0x9f, 0x71, 0x26, 0x99, 0xfd, 0x27, 0xa5, 0x69, 0xe6, 0x2f, 0xdb, 0xad, 0x6e, 0x32,
	0x91, 0x77, 0xf9, 0xd8, 0x8f, 0x59, 0x1a, 0x24, 0x2c, 0x61, 0x81, 0xa6, 0xc6, 0xf9, 0xad, 0xae,
	0x74, 0xa1, 0x4f, 0x66, 0xba, 0xe5, 0xae, 0xd5, 0x48, 0x19, 0xc5, 0xa9, 0x21, 0x3a, 0x4f, 0x16,
	0xfc, 0x25, 0xf9, 0x14, 0xcf, 0x17, 0x18, 0x13, 0x7c, 0xc8, 0x51, 0x48, 0x7b, 0x1b, 0x6a, 0xb9,
	0x40, 0x1e, 0x4e, 0xa8, 0x63, 0xb9, 0x96, 0xd7, 0x20, 0x55, 0x55, 0x0e, 0xa8, 0xdd, 0x86, 0x46,
	0x16, 0xc5, 0xf7, 0x28, 0x55, 0x0b, 0x5c, 0xcb, 0x2b, 0x93, 0xba, 0x79, 0x30, 0xa0, 0xf6, 0x21,
	0x54, 0x94, 0x79, 0xa7, 0xe9, 0x5a, 0x5e, 0xb3, 0xbf, 0xe5, 0xbf, 0x33, 0xee, 0x2b, 0x8d, 0xd1,
	0x25, 0xd1, 0x88, 0x7d, 0x0c, 0xb5, 0x14, 0x85, 0x88, 0x12, 0x74, 0x7e, 0x6b, 0xba, 0xfd, 0x81,
	0xbe, 0x56, 0xde, 0x86, 0x06, 0x21, 0x4b, 0xb6, 0xf3, 0x62, 0xc1, 0xbf, 0x37, 0xaf, 0x22, 0x63,
	0x33, 0x81, 0x9b, 0xcd, 0xee, 0x40, 0x1d, 0x39, 0x0f, 0x63, 0x46, 0xd1, 0x29, 0xb9, 0x96, 0xf7,
	0x8b, 0xd4, 0x90, 0xf3, 0x33, 0x46, 0xf5, 0x8c, 0x6a, 0xa5, 0x22, 0x71, 0xca, 0x66, 0x06, 0x39,
	0x1f, 0x8a, 0xe4, 0xa7, 0x2f, 0xb8, 0x80, 0xff, 0x27, 0xb1, 0x9c, 0xb0, 0xd9, 0xd7, 0xdf, 0x46,
	0x17, 0xaa, 0x91, 0x5e, 0xb5, 0xc1, 0xae, 0xd1, 0x21, 0x05, 0xd4, 0x79, 0x04, 0x7b, 0x55, 0xf9,
	0xbb, 0xb3, 0xed, 0x3f, 0x17, 0x9f, 0xe1, 0xe2, 0x8a, 0x51, 0x34, 0x4e, 0xec, 0x0b, 0xa8, 0x6b,
	0x37, 0x2a, 0xd0, 0xdd, 0x35, 0x69, 0xaf, 0x84, 0xd4, 0xda, 0xdb, 0xd8, 0x2f, 0xae, 0x32, 0x02,
	0x50, 0x75, 0xb1, 0xda, 0x5d, 0x9b, 0xc6, 0xea, 0xc2, 0xfd, 0x4f, 0x08, 0xb3, 0xf2, 0xb4, 0x72,
	0x53, 0x9a, 0xf7, 0xc6, 0x55, 0xfd, 0x1f, 0x1d, 0xbd, 0x06, 0x00, 0x00, 0xff, 0xff, 0xca, 0xcb,
	0x79, 0xbf, 0xcf, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RulexNodeActionClient is the client API for RulexNodeAction service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RulexNodeActionClient interface {
	ExecRule(ctx context.Context, in *RuleExecRequest, opts ...grpc.CallOption) (*RuleExecResponse, error)
	ExecAction(ctx context.Context, in *ActionExecRequest, opts ...grpc.CallOption) (*ActionExecResponse, error)
}

type rulexNodeActionClient struct {
	cc *grpc.ClientConn
}

func NewRulexNodeActionClient(cc *grpc.ClientConn) RulexNodeActionClient {
	return &rulexNodeActionClient{cc}
}

func (c *rulexNodeActionClient) ExecRule(ctx context.Context, in *RuleExecRequest, opts ...grpc.CallOption) (*RuleExecResponse, error) {
	out := new(RuleExecResponse)
	err := c.cc.Invoke(ctx, "/mdmp.metadata.RulexNodeAction/ExecRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rulexNodeActionClient) ExecAction(ctx context.Context, in *ActionExecRequest, opts ...grpc.CallOption) (*ActionExecResponse, error) {
	out := new(ActionExecResponse)
	err := c.cc.Invoke(ctx, "/mdmp.metadata.RulexNodeAction/ExecAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RulexNodeActionServer is the server API for RulexNodeAction service.
type RulexNodeActionServer interface {
	ExecRule(context.Context, *RuleExecRequest) (*RuleExecResponse, error)
	ExecAction(context.Context, *ActionExecRequest) (*ActionExecResponse, error)
}

// UnimplementedRulexNodeActionServer can be embedded to have forward compatible implementations.
type UnimplementedRulexNodeActionServer struct {
}

func (*UnimplementedRulexNodeActionServer) ExecRule(ctx context.Context, req *RuleExecRequest) (*RuleExecResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecRule not implemented")
}
func (*UnimplementedRulexNodeActionServer) ExecAction(ctx context.Context, req *ActionExecRequest) (*ActionExecResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecAction not implemented")
}

func RegisterRulexNodeActionServer(s *grpc.Server, srv RulexNodeActionServer) {
	s.RegisterService(&_RulexNodeAction_serviceDesc, srv)
}

func _RulexNodeAction_ExecRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RuleExecRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RulexNodeActionServer).ExecRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mdmp.metadata.RulexNodeAction/ExecRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RulexNodeActionServer).ExecRule(ctx, req.(*RuleExecRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RulexNodeAction_ExecAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActionExecRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RulexNodeActionServer).ExecAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mdmp.metadata.RulexNodeAction/ExecAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RulexNodeActionServer).ExecAction(ctx, req.(*ActionExecRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RulexNodeAction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mdmp.metadata.RulexNodeAction",
	HandlerType: (*RulexNodeActionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExecRule",
			Handler:    _RulexNodeAction_ExecRule_Handler,
		},
		{
			MethodName: "ExecAction",
			Handler:    _RulexNodeAction_ExecAction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "metadata/v1/metadata_rule_node.proto",
}
